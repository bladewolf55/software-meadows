<?xml version="1.0" encoding ="UTF-8"?>
<rss xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" version="2.0">
  <channel>
    <title>Software Meadows</title>
    <description>A pleasant walk through computing</description>
    <link>https://www.softwaremeadows.com/feed</link>
    <link href="https://www.softwaremeadows.com/feed" rel="self" type="application/rss+xml" xmlns="http://www.w3.org/2005/Atom" />
    <item>
      <title>How (and why) to maintain a README.md file for internal projects: Onboarding and Continuous Integration</title>
      <description>&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/how_and_why_to_maintain_a_readme_md_file_-_onboarding_and_continuous_integration/images/id-314246---1548375197.svg-300.png" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="contents"&gt;Contents&lt;/h2&gt;
&lt;!-- Start Document Outline --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-the-heck-am-i-talking-about"&gt;What (the heck Am I Talking About)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-do-i-want-one"&gt;Why (do I want one)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-communicate-the-environment"&gt;How (do I communicate the Environment)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-communicate-getting-started"&gt;How (do I communicate Getting Started)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-is-this-valuable-to-cicd"&gt;Why (is this valuable to CI/CD)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#when-do-i-see-an-awesome-template"&gt;When (do I see an awesome template)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thats-a-wrap"&gt;That's (a wrap!)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- End Document Outline --&gt;
&lt;blockquote&gt;
&lt;p&gt;This won't be a &amp;quot;Complete and Authoritative 10 Steps to Perfect Readme Files.&amp;quot; It's intended to be a good starting point.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="what-the-heck-am-i-talking-about"&gt;What (the heck Am I Talking About)?&lt;/h2&gt;
&lt;p&gt;I'm talking about the &lt;code&gt;README.md&lt;/code&gt; file that's typically at the root of Git repositories, especially when using GitHub, GitLab, BitBucket, and Azure DevOps.&lt;/p&gt;
&lt;p&gt;Specifically, though, I'm talking about &lt;em&gt;&lt;strong&gt;the Readme file that you use in your on-premise repositories&lt;/strong&gt;&lt;/em&gt;. That is, your organization's internal projects.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Internal projects' Readme files are too often ignored. If they have a concrete and central purpose, they won't be.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="why-do-i-want-one"&gt;Why (do I want one)?&lt;/h2&gt;
&lt;p&gt;The Readme file should be the starting point for your code's users. For open source, it starts with what the code is for and how to use it. It ends with information on how to build the code.&lt;/p&gt;
&lt;p&gt;Internal projects have a different audience and different priorities. They are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Help a new developer get the code working on her workstation.&lt;/li&gt;
&lt;li&gt;Be the source of truth for continuous integration (CI).&lt;/li&gt;
&lt;li&gt;Be the source of truth for the environment's version numbers.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Luckily these go hand-in-hand(-in-hand). The point of the build portion of CI is to prove the code can be built on a clean workstation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But what does a &amp;quot;clean workstation&amp;quot; mean? Today, it could mean a fresh, default installation of Windows, Linux, or MacOS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are two parts to getting your code building and running on a clean workstation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configure the &lt;em&gt;Environment&lt;/em&gt; the code will build in. These are external dependencies.&lt;/li&gt;
&lt;li&gt;Get and &lt;em&gt;Build&lt;/em&gt; the code along with its internal dependencies.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="how-do-i-communicate-the-environment"&gt;How (do I communicate the Environment)?&lt;/h2&gt;
&lt;p&gt;The Environment will be the operating system and global installations required by your application. In Azure DevOps Pipeline parlance, they're the build agent's &lt;em&gt;capabilities&lt;/em&gt;. Here's an example for a solution that includes an Angular application and a .NET Core WebApi.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-markdown"&gt;## Environment
&amp;gt; Changing the environment? Change the CI/CD pipeline!

Install                          | Version    
---------------------------------|------------
Node                             | 14.15.3
NPM                              | deps on Node
Angular CLI                      | 11.2.3
Azure Authentication             | latest
Visual Studio (recommended)      | VS 2019+
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;One way to think of this is: &amp;quot;If my repo has a build script, what do I &lt;em&gt;not&lt;/em&gt; want it to manage?&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Your app's build script shouldn't try to install Node or Angular. It shouldn't even check if they exist. The first-use developer, or the person creating the CI pipeline, should refer to the Readme for environment details. The contract is that the environment will exist and the build script doesn't need to verify it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It's easy, with Node apps, to know if it's an environment package. It gets installed globally using &lt;code&gt;npm install -g&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I recommend the table above being the Readme's &lt;em&gt;only&lt;/em&gt; place version numbers exist for those dependencies. It's the source of truth. If you opt to include them in the Getting Started instructions, you need to remember to find/replace whenever the version numbers change.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Regardless, the Readme is the source of truth for environment version information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="how-do-i-communicate-getting-started"&gt;How (do I communicate Getting Started)?&lt;/h2&gt;
&lt;p&gt;An excellent practice is to create a build script that will be used by the CI pipeline. This same script should be run before pushing the final commits for a pull request. This way, the CI process is being tested in advance.&lt;/p&gt;
&lt;p&gt;At its very simplest, a .NET Core solution's build script could look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;dotnet build MySolution.sln -c Release -t:Rebuild
dotnet publish MySolution.sln -c Release --output &amp;quot;package&amp;quot;
cd my-angular-app
npm run my-angular-app:build:production
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This rebuilds the solution and publishes the .NET assemblies to a &amp;quot;package&amp;quot; folder. The Angular app is built and published to its standard &lt;code&gt;dist&lt;/code&gt; folder. In your own organization, the script may also run tests, recreate a database, etc. The point is, there's just one step to take.&lt;/p&gt;
&lt;p&gt;From an onboarding viewpoint, this is great. The steps are basically &amp;quot;clone the repo, run the build script.&amp;quot;&lt;/p&gt;
&lt;p&gt;Our Getting Started section could look like this. Note that I'm recommending &lt;code&gt;nvm&lt;/code&gt; or &lt;code&gt;nvm-windows&lt;/code&gt; to the developer. This script also configures the Azure authentication to an Azure Artifacts package source.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-markdown"&gt;## Getting Started
&amp;gt; Be sure to use the correct versions from above

**Environment**  
1.  Install PowerShell Core.
1.  Install NVM or NVM for Windows.
1.  Open a PowerShell *administrator* shell:
    ```powershell
    nvm install [version]
    nvm use [version]
    ```
1.  Open a PowerShell *user* shell
    ```powershell
    # Angular
    npm install -g @angular/cli@[version]
    # Azure Auth
    npm install -g vsts-npm-auth
    ```

**Application**  
    ```powershell
    # Clone source
    cd &amp;quot;C:\users\[user]\source\repos&amp;quot;
    git clone https://corporate/repo/path/MyApp.git
    cd MyApp
    # Set credentials for company packages server
    vsts-npm-auth -config MyApp/my-angular-app/.npmrc
    
    # Build for local development
    ./build.ps1
    ```
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Again, I'm only indicating version numbers so that there's reduced chance of the version numbers in the Environment table not matching the version numbers in Getting Started. Of course, if you trust everyone to find/replace, there's nothing wrong with including them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="why-is-this-valuable-to-cicd"&gt;Why (is this valuable to CI/CD)?&lt;/h2&gt;
&lt;p&gt;The Getting Started steps are, basically, what the CI/CD pipeline should use, too. Here's what a simple Azure YAML file might look like for our solution. The steps are virtually identical.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;trigger: main

pool: 
  vmImage: 'ubuntu-latest'
  
stages:
- stage: build_stage
  displayName: 'Build' 
  jobs:
  - job: 
    steps:
    # Environment capabilities
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '14.15.3'
    - pwsh: 'npm install -g @angular/cli@11.0.7'
      displayName: 'Install Angular CLI'
    - task: npmAuthenticate@0
      displayName: Authenticate to Azure Artifacts NPM
      inputs:
        workingFile: $(System.DefaultWorkingDirectory)/my-angular-app/.npmrc
    # Build
    - pwsh: ./build.ps1
      displayName: 'Run build script'
    # Publish
    - publish: $(System.DefaultWorkingDirectory)/package
      artifact: package
      displayName: Publish

- stage: deploy_to_build_stage
  # etc
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="when-do-i-see-an-awesome-templateexample"&gt;When (do I see an awesome template/example)?&lt;/h2&gt;
&lt;p&gt;Right now.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-markdown"&gt;# My Awesome App

## Introduction
What the app is for.

## Environment
&amp;gt; Changing the environment? Change the CI/CD pipeline!

Install                          | Version    
---------------------------------|------------
.NET Framework                   | 4.8
PowerShell Core                  | 7.x
Visual Studio (recommended)      | VS 2019+

Sources:
*   [.NET Framework](https://dotnet.microsoft.com/download/dotnet-framework)
*   [PowerShell Core](https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-windows)

## Getting Started
&amp;gt; Be sure to use the correct versions from above.

**Environment**  
1.  Install PowerShell Core [version].
1.  Install .NET Framework [version].

**Application** 
    ```powershell
    # Clone source
    cd &amp;quot;C:\users\[user]\source\repos&amp;quot;
    git clone [path-to-repo]
    cd [appname]
    # Build app
    ./build.ps1
    ```

## Daily Development
Things needed to smoothly develop, such as how to run service dependencies.

## When to run the build script
    ```powershell
    ./build.ps1
    ```
The build script simulates what the CI server will do, and is intended to catch build errors before they get to the server. The script should be run before the &amp;quot;final&amp;quot; PR commit. That is:

1.  Before pushing the final feature branch, AND/OR
1.  Before pushing to the mainline branch

## Troubleshooting
Things that might go wrong. These SHOULD end up on product backlogs and get fixed.

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="thats-a-wrap"&gt;That's (a wrap!)&lt;/h2&gt;
&lt;p&gt;The key values of a Readme for internal projects are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Source of truth for environment dependency version numbers&lt;/li&gt;
&lt;li&gt;Rapid developer onboarding&lt;/li&gt;
&lt;li&gt;Matching steps used for building locally and in CI/CD&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;How can you keep this up-to-date? While I'm not hoping your turnover is high, whenever a new developer is brought on she should try to get the application working using &lt;em&gt;just&lt;/em&gt; the documentation, and update if needed.&lt;/p&gt;
&lt;p&gt;The proof that everyone's doing their jobs? &lt;em&gt;The document won't need updating!&lt;/em&gt;&lt;/p&gt;
</description>
      <pubDate>Fri, 26 Mar 2021 09:28:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/how_and_why_to_maintain_a_readme_md_file_-_onboarding_and_continuous_integration</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/how_and_why_to_maintain_a_readme_md_file_-_onboarding_and_continuous_integration</guid>
    </item>
    <item>
      <title>One Sheet Summary: Leadership is Language</title>
      <description>&lt;p&gt;I make these to post on my wall and help me learn the subject. Be sure to read the book!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwaremeadows.com/well-being"&gt;All One Sheet Summaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Leadership-Language-Hidden-Power-Say/dp/B07L2KL5XV"&gt;Buy the book on Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;Seriously, read Mr Marquet's entire excellent book. It's so packed that this summary doesn't do it justice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.softwaremeadows.com/posts/one_sheet_summry-_leadership_is_language/images/leadership-is-language.pdf"&gt;Download the PDF Version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/one_sheet_summry-_leadership_is_language/images/leadership-is-language.png" alt="" /&gt;&lt;/p&gt;
</description>
      <pubDate>Tue, 5 Jan 2021 14:00:00 -0700</pubDate>
      <link>https://www.softwaremeadows.com/posts/one_sheet_summry-_leadership_is_language</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/one_sheet_summry-_leadership_is_language</guid>
    </item>
    <item>
      <title>NuGet 5.7+ Ignores NuSpec CSProj Replacement Tokens - and other weird behaviors</title>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;br /&gt;
A stellar sleuth discovered that the error messages are related to whether the &lt;code&gt;nuget.exe&lt;/code&gt; executable's &amp;quot;Unblock&amp;quot; attribute is checked. When it is (i.e. the file is unblocked), the error message doesn't occur. While it's still a bug, at least there's a solid workaround.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/nuget_5_7+_ignores_nuspec_replacement_tokens_-_and_other_weird_behavio/images/sc02.png" alt="" /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I submitted this issue in on 2020-08-28. It's had some comments and confirmations, but the moderators are having trouble reproducing it. I'm hoping this will help.&lt;/p&gt;
&lt;p&gt;Source Code:  &lt;a href="https://www.softwaremeadows.com/posts/nuget_5_7+_ignores_nuspec_replacement_tokens_-_and_other_weird_behavio/images/ClassLibrary1.zip"&gt;ClassLibrary1.zip&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="title"&gt;Title&lt;/h2&gt;
&lt;p&gt;Here's the link to the issue.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/NuGet/Home/issues/9954"&gt;NuGet again throwing exceptions &amp;quot;authors is required&amp;quot; &amp;quot;description is required&amp;quot;, ignoring csproj/nuspec replacement tokens · Issue #9954&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="environment"&gt;Environment&lt;/h2&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;Windows 10 Pro
Visual Studio 2019
.NET Framework 4.8
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="more-info"&gt;More Info&lt;/h2&gt;
&lt;p&gt;There are multiple failures being reported below. The fundamental one is that NuGet 5.7 and above ignore token replacements in .nuspec files from .NET Framework project .csproj files.&lt;/p&gt;
&lt;h2 id="steps-to-reproduce"&gt;Steps to Reproduce&lt;/h2&gt;
&lt;h3 id="pre-setup"&gt;Pre-setup&lt;/h3&gt;
&lt;p&gt;Check the Windows PATH environment variables (&lt;code&gt;System Properties &amp;gt; Advanced &amp;gt; Environment Variables&lt;/code&gt;) at the user and system levels and be sure that &lt;em&gt;no&lt;/em&gt; version of &lt;code&gt;nuget.exe&lt;/code&gt; is on the path. One way to verify is to open a new command window and type &lt;code&gt;nuget&lt;/code&gt;. If there's output, &lt;code&gt;nuget&lt;/code&gt; is on the path.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A reboot may be required for the computer to recognize the path change. Normally, it only takes closing completely out of the System Properties editor.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Remember to open a new command window after PATH changes so the environment variable is reloaded.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="steps"&gt;Steps&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;In Visual Studio, create a new .NET Framework Console Application.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/nuget_5_7+_ignores_nuspec_replacement_tokens_-_and_other_weird_behavio/images/sc01.png" alt="" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Properties\AssemblyInfo.cs add the values that are substituted for $description and $author:
&lt;pre&gt;&lt;code class="language-cs"&gt;[assembly: AssemblyDescription(&amp;quot;Desc&amp;quot;)]
[assembly: AssemblyConfiguration(&amp;quot;&amp;quot;)]
[assembly: AssemblyCompany(&amp;quot;Name&amp;quot;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Download NuGet 5.7 &lt;a href="https://www.nuget.org/downloads"&gt;https://www.nuget.org/downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Copy to the project folder&lt;/li&gt;
&lt;li&gt;Rename to &lt;code&gt;nuget.exe&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;It's important that the file be named &lt;code&gt;nuget.exe&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In the &lt;code&gt;ClassLibrary1.csproj&lt;/code&gt; project folder, run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nuget spec
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reduce the resulting &lt;code&gt;ClassLibrary1.nuspec&lt;/code&gt; file to the minimum required properties&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;package &amp;gt;
  &amp;lt;metadata&amp;gt;
    &amp;lt;id&amp;gt;$id$&amp;lt;/id&amp;gt;
    &amp;lt;version&amp;gt;$version$&amp;lt;/version&amp;gt;
    &amp;lt;authors&amp;gt;$author$&amp;lt;/authors&amp;gt;
    &amp;lt;description&amp;gt;$description$&amp;lt;/description&amp;gt;
  &amp;lt;/metadata&amp;gt;
&amp;lt;/package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Build the project or solution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In project folder, run &lt;code&gt;nuget pack&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected&lt;/strong&gt;: Successful build of new package&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actual&lt;/strong&gt;: Error that Author and Description are missing:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;Attempting to build package from 'ClassLibrary1.csproj'.
MSBuild auto-detection: using msbuild version '16.8.2.56705' from 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin'.
Packing files from 'C:\Users\charl\source\repos\ClassLibrary1\ClassLibrary1\bin\Debug'.
Using 'ClassLibrary1.nuspec' for metadata.
Authors is required.
Description is required.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="nuget-5.6-behavior"&gt;NuGet 5.6 Behavior&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In the above environment, replace the &lt;code&gt;nuget.exe&lt;/code&gt; version 5.7 with version 5.6.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It's important that the file be named &lt;code&gt;nuget.exe&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run &lt;code&gt;nuget pack&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The pack succeeds.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;Attempting to build package from 'ClassLibrary1.csproj'.
MSBuild auto-detection: using msbuild version '16.8.2.56705' from 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin'.
Packing files from 'C:\Users\charl\source\repos\ClassLibrary1\ClassLibrary1\bin\Debug'.
Using 'ClassLibrary1.nuspec' for metadata.
Successfully created package 'C:\Users\charl\source\repos\ClassLibrary1\ClassLibrary1\ClassLibrary1.1.0.0.nupkg'.
WARNING: NU5128: Some target frameworks declared in the dependencies group of the nuspec and the lib/ref folder do not have exact matches in the other location. Consult the list of actions below:
- Add a dependency group for .NETFramework4.8 to the nuspec
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="nuget-5.8-and-5.9-preview-behaviors"&gt;NuGet 5.8 and 5.9 preview Behaviors&lt;/h2&gt;
&lt;p&gt;Both versions exhibit the same bug as 5.7.&lt;/p&gt;
&lt;h2 id="behavior-when-renaming-nuget.exe"&gt;Behavior When Renaming &lt;code&gt;nuget.exe&lt;/code&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Copy version 5.6 into the project folder&lt;/li&gt;
&lt;li&gt;Rename it &lt;code&gt;nugetx.exe&lt;/code&gt; (It doesn't matter what it's renamed to, as long as it isn't &lt;code&gt;nuget.exe&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;nugetx.exe pack&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Unlike when named &lt;code&gt;nuget.exe&lt;/code&gt;, version 5.6 &lt;code&gt;pack&lt;/code&gt; fails with the unexpected error!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;Attempting to build package from 'ClassLibrary1.csproj'.
MSBuild auto-detection: using msbuild version '16.8.2.56705' from 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin'.
Packing files from 'C:\Users\charl\source\repos\ClassLibrary1\ClassLibrary1\bin\Debug'.
Using 'ClassLibrary1.nuspec' for metadata.
Authors is required.
Description is required.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="behavior-when-two-nuget-files-in-path"&gt;Behavior When Two NuGet files in Path&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Copy version 5.6 into the project folder and rename to &lt;code&gt;nuget.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copy version 5.6 &lt;em&gt;again&lt;/em&gt; into the project folder and rename to &lt;code&gt;nugetx.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;nuget pack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;nugetx pack&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In &lt;em&gt;both&lt;/em&gt; cases, the pack succeeds.&lt;/p&gt;
&lt;h2 id="real-world-concerns"&gt;Real World Concerns&lt;/h2&gt;
&lt;p&gt;Many organizations will, in a continuous deployment environment, use a known path to the latest NuGet package and expect it to be named &lt;code&gt;nuget.exe&lt;/code&gt;. As seen above, those organizations will suddenly find themselves with failing package steps.&lt;/p&gt;
&lt;p&gt;In order to continue, they must either stay on version 5.6 and accept the potential security issues there, or rework their pipeline.&lt;/p&gt;
</description>
      <pubDate>Sat, 26 Dec 2020 13:38:00 -0700</pubDate>
      <link>https://www.softwaremeadows.com/posts/nuget_5_7+_ignores_nuspec_replacement_tokens_-_and_other_weird_behavio</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/nuget_5_7+_ignores_nuspec_replacement_tokens_-_and_other_weird_behavio</guid>
    </item>
    <item>
      <title>Tech Debt - You can't put maintenance last if you want to drive a race car</title>
      <description>&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/tech_debt_-_you_cant_put_maintenance_last_if_you_want_to_drive_a_race/images/640px-ALMS_Prototypes.jpg" alt="" /&gt;&lt;br /&gt;
&lt;sup&gt;SPYDERMAN360, CC BY 2.0 &lt;a href="https://creativecommons.org/licenses/by/2.0"&gt;https://creativecommons.org/licenses/by/2.0&lt;/a&gt;, via Wikimedia Commons&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally posted at &lt;a href="https://clearmeasure.com/tech-debt-you-cant-put-maintenance-last-if-you-want-to-drive-a-race-car/"&gt;Clear Measure&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="the-nurture-bit"&gt;The Nurture Bit&lt;/h2&gt;
&lt;p&gt;When I was growing up, I spent part of my summers with my grandparents in Oklahoma. I was inculcated into the value of maintenance early on. My grandfather did most of his own car maintenance and repair. I'm not talking about just an oil and filter change. Back then, a determined car owner could virtually rebuild an entire automobile.&lt;/p&gt;
&lt;p&gt;My grandfather had a car lift in his garage.&lt;/p&gt;
&lt;p&gt;Imagine if Danica Patrick or Jeff Gordon was told just before a race &amp;quot;sorry, we didn't fix your brakes because the boss said to paint a new sponsor's logo on the car. Maybe next time.&amp;quot; I personally don't have to imagine what happens if you don't replace your tires. I did a 360 on the highway because of balding tires in snow.&lt;/p&gt;
&lt;p&gt;To me, paying down technical debt, refactoring, cleaning up documentation, is just part of what a development shop must do. Likewise, operations must keep computers updated. However, I've seen many organizations where maintenance is treated by management as optional, or worse, as a profit obstacle. And I've seen just as many developers and network engineers avoid maintenance. Why? What are the consequences? Do they matter?&lt;/p&gt;
&lt;h2 id="the-nature-bit"&gt;The Nature Bit&lt;/h2&gt;
&lt;p&gt;There are several reasons humans metaphorically--and actually--don't change their oil or replace their Access 97 applications. Among them,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's still working, and &amp;quot;if it ain't broke&amp;quot; . . . well, you know the rest.&lt;/li&gt;
&lt;li&gt;We're &lt;a href="https://www.psychologytoday.com/us/blog/shut-and-listen/201806/humans-cant-plan-long-term-and-heres-why"&gt;not good at long-term planning&lt;/a&gt; and &amp;quot;tend to opt for immediate rewards.&amp;quot;&lt;/li&gt;
&lt;li&gt;We're adaptable. Very. &lt;a href="https://en.wikipedia.org/wiki/Hedonic_treadmill"&gt;Hedonic adaptation&lt;/a&gt;, for example, has its good points, but not when it keeps us from fixing those security holes that we &amp;quot;really should get to someday.&amp;quot;&lt;/li&gt;
&lt;li&gt;We think it's too expensive in dollars, time, effort, or any combination of those. As Mac Smith puts it in &lt;a href="https://reliabilityweb.com/articles/entry/maintenance-as-a-profit-center"&gt;this article&lt;/a&gt;, &amp;quot;One of the things that has NOT changed very much is the age-old management perception that maintenance is just a necessary evil and unfortunate cost center.&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In my experience, maintenance such as paying down technical debt is treated as second-class, something you &lt;em&gt;might&lt;/em&gt; have time to do &lt;em&gt;after&lt;/em&gt; you're done writing your software and fixing bugs. Management too often sees it as similar to employees reading about business improvement between support calls; &amp;quot;you can do that on your &lt;em&gt;own&lt;/em&gt; time.&amp;quot; And while we software developers know refactoring is important, how often do we not do it just because (we feel) there isn't &lt;em&gt;time&lt;/em&gt;?&lt;/p&gt;
&lt;h2 id="technical-debt-is-really-debt"&gt;Technical Debt is Really Debt&lt;/h2&gt;
&lt;p&gt;Measuring and reporting technical debt can be challenging. You'll find articles saying it's harder than measuring financial debt. But they all agree that technical debt translates to real dollars. We're talking potentially big numbers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Based on this definition [the cost of fixing the structural quality problems in an application that, if left unfixed, puts the business at serious risk] and the analysis of 1400 applications containing 550 million lines of code submitted by 160 organizations, CRL estimate that the Technical Debt of an average-sized application of 300,000 lines of code (LOC) is $1,083,000. This represents an average Technical Debt per LOC of $3.61. --&lt;a href="https://www.castsoftware.com/research-labs/technical-debt-estimation"&gt;Technical Debt Estimation - CAST&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Technical debt is unavoidable. Like buying an office building, as soon as you create software you have dollars of technical debt. Business owners pay for regular building maintenance, why not regular software maintenance? The question for organizations is, &amp;quot;does not cleaning up code really affect my profit?&amp;quot; I think unless shown otherwise, you should assume the answer is yes. Here's a list of impacts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Technical Debt &lt;strong&gt;increases time-to-market and development costs&lt;/strong&gt;. How?
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Increased security risks&lt;/strong&gt; The best way to increase the chances of your data being stolen every day? Don't prioritize auditing and daily maintaining your software.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Time to understand code&lt;/strong&gt; The &amp;quot;dirtier&amp;quot; the code base, the longer it takes developers to understand an already complex system. I've experienced code that regularly took me &lt;em&gt;three times longer&lt;/em&gt; than it should have to figure out.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Increased likelihood of introducing bugs&lt;/strong&gt; The harder code is to understand, the more likely you'll break something when adding a new feature. &lt;em&gt;Automated Testing&lt;/em&gt; helps with this, but older code often isn't written to make testing easy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Decreased maintainability&lt;/strong&gt; Ever tried to find a part for a 1980s appliance you dearly love? Multiply that by a thousand and that's what it's costing your business each day your developers struggle with old or poorly architected code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Harder to replace&lt;/strong&gt; Software components eventually have to be replaced. But it's not like replacing your car's tires. It's more like replacing all the galvanized pipe in a thirty-story five-star hotel filled with Hollywood stars before the Emmys.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prone to outages&lt;/strong&gt; The authors of &lt;a href="https://www.amazon.com/Meltdown-Systems-Fail-What-About/dp/0735222630"&gt;Meltdown&lt;/a&gt; found that highly complicated, tightly-coupled systems will inevitably, unpredictably fail. Software is--you guessed it--by its nature prone to complexity and coupling.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Employee depression leading to apathy and increased turnover&lt;/strong&gt; An overlooked cost of technical debt is the health toll it takes, nicely expressed in the article &lt;a href="https://codeahoy.com/2020/01/25/technical-debt/"&gt;Technical Debt is Soul-crushing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The inability to quickly respond to changing requirements and priorities&lt;/strong&gt; Consider the above points. If it takes longer to understand, maintain, fix, and introduce new features to existing code, how can the developers pivot and respond quickly to new market conditions? It's hard to turn a submarine. Now imagine trying to turn a fleet of subs. Managing technical debt transforms those submarines into James Bond sports cars.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="im-convinced.i-think.what-do-i-do"&gt;I'm Convinced. I Think. What Do I Do?&lt;/h2&gt;
&lt;p&gt;Like buying an old house that you learn has plumbing, electric, and foundation problems . . . but you gotta live there so you can't just tear it down . . . technical debt can be overwhelming. The answer to overwhelm is chunking down the work load and choosing tasks wisely.&lt;/p&gt;
&lt;h3 id="forget-the-blame"&gt;1. Forget the Blame&lt;/h3&gt;
&lt;p&gt;It's not anyone's fault. Or it's everyone's fault. Regardless, the way forward is to act like scientists and colleagues. Get curious. Fix the problem, not the blame.&lt;/p&gt;
&lt;h3 id="accept-change-especially-at-the-top"&gt;2.  Accept Change, Especially at the Top&lt;/h3&gt;
&lt;p&gt;Technical debt has been created as much from the top of the organization as from the coders. Every time a project was made &amp;quot;top priority,&amp;quot; and teams were asked &amp;quot;how do we work around that to release faster?&amp;quot; without also saying &amp;quot;but then it needs to be done right, immediately,&amp;quot; executives reduced the abililty to stay fleet-footed. Execs and devs must both change. It'll be for the better.&lt;/p&gt;
&lt;h3 id="measure-for-reality"&gt;3. Measure For Reality&lt;/h3&gt;
&lt;p&gt;How will you define technical debt? How will you discover it? How will you measure it? The answers to these questions lead to facts, and facts often aren't comfortable things to face. You can do this yourself, but I recommend partnering with an outside company such as &lt;a href="https://clearmeasure.com/"&gt;Clear Measure&lt;/a&gt;&lt;a id="fnref:1" href="#fn:1" class="footnote-ref"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;, who doesn't share the organization's culture or biases. Be sure they use evidence-based metrics such as the &lt;a href="https://stelligent.com/2018/12/21/measuring-devops-success-with-four-key-metrics/"&gt;DORA group's four key metrics&lt;/a&gt; of high-performing teams.&lt;/p&gt;
&lt;h3 id="improve-a-little-a-lot"&gt;4. Improve a Little, a Lot&lt;/h3&gt;
&lt;p&gt;With facts in hand, you have ways of measuring progress. Choose an easy win that the &lt;em&gt;developers&lt;/em&gt; agree will help them. Not the executives. Not project managers. Developers. This gives them  ownership of their purpose. I again recommend they accept coaching just like a top racer or athlete does. Utlimately, though, they'll find their solution through their autonomy and mastery. Next, repeat. A one-percent improvement each day is realistic and sustainable.&lt;/p&gt;
&lt;h3 id="celebrate"&gt;5. Celebrate&lt;/h3&gt;
&lt;p&gt;Every success needs a reward, especially the little ones. Repeated behaviors with rewards become habits, and that's what we want when it comes to software maintenance and paying down technical debt.&lt;/p&gt;
&lt;h2 id="references-and-further-reading"&gt;References and Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tenmilesquare.com/the-impact-of-technical-debt-a-guide-for-business-managers/"&gt;The Impact of Technical Debt: A Guide for Business Managers – Tenmilesquare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://18f.gsa.gov/2015/08/07/technical-debt-1/"&gt;18F: Digital service delivery | Don’t underestimate the danger of technical debt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://18f.gsa.gov/2015/09/04/what-is-technical-debt/"&gt;18F: Digital service delivery | What is technical debt?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.castsoftware.com/research-labs/technical-debt-estimation"&gt;Technical Debt Estimation - CAST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://commadot.com/the-ux-of-technical-debt/"&gt;http://commadot.com/the-ux-of-technical-debt/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.industrialmarketer.com/marketers-technical-debt/"&gt;Why Marketers Need to Start Thinking About Technical Debt | Industrial Marketer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.computerworld.com/article/2516325/the-new-push-to-measure-software-s-true-cost.html"&gt;The new push to measure software's true cost | Computerworld&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.toptal.com/finance/part-time-cfos/technical-debt"&gt;How Does Technical Debt Affect a Business Financially? | Toptal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deloitte.wsj.com/cio/2015/01/21/how-to-calculate-technical-debt/"&gt;How to Calculate Technical Debt - CIO Journal - WSJ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://thinkapps.com/blog/development/technical-debt-calculation/"&gt;How to Calculate Technical Debt and Express It Clearly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://thinkapps.com/blog/development/technical-debt-computation-top-tools/"&gt;Technical Debt Computation: Comparison of Top Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sonarqube.org/"&gt;Code Quality and Security | SonarQube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.forbes.com/sites/falonfatemi/2016/05/30/technical-debt-the-silent-company-killer/#29b15aec4562"&gt;Technical Debt: The Silent Company Killer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeahoy.com/2020/01/25/technical-debt/"&gt;Technical Debt is Soul-crushing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Hedonic_treadmill"&gt;Hedonic treadmill - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reliabilityweb.com/articles/entry/maintenance-as-a-profit-center"&gt;Maintenance as a Profit Center - Reliabilityweb: A Culture of Reliability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://corporatefinanceinstitute.com/resources/knowledge/trading-investing/maintenance-margin/"&gt;Maintenance Margin - Overview, How It Works, Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.efficientplantmag.com/2015/05/the-psychology-of-successful-maintenance-and-reliability-programs/"&gt;The Psychology Of Successful Maintenance and Reliability Programs - Efficient Plant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.psychologytoday.com/us/blog/shut-and-listen/201806/humans-cant-plan-long-term-and-heres-why"&gt;Humans Can't Plan Long-Term, and Here's Why | Psychology Today&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://18f.gsa.gov/2015/08/07/technical-debt-1/"&gt;18F: Digital service delivery | Don’t underestimate the danger of technical debt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.castsoftware.com/research-labs/technical-debt-estimation"&gt;Technical Debt Estimation - CAST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Meltdown-Systems-Fail-What-About/dp/0735222630"&gt;Meltdown: Why Our Systems Fail and What We Can Do About It&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Le_Mans_Prototype"&gt;Le Mans Prototypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Endurance_racing_(motorsport)"&gt;Endurance racing (motorsport) - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnotes"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Disclosure: I'm an employee of Clear Measure.&lt;a href="#fnref:1" class="footnote-back-ref"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
      <pubDate>Mon, 7 Dec 2020 14:38:00 -0700</pubDate>
      <link>https://www.softwaremeadows.com/posts/tech_debt_-_you_cant_put_maintenance_last_if_you_want_to_drive_a_race</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/tech_debt_-_you_cant_put_maintenance_last_if_you_want_to_drive_a_race</guid>
    </item>
    <item>
      <title>The Four Foundations of Software Improvement - Letter-Size Art Deco Poster</title>
      <description>&lt;p&gt;For me, these cover most--if not all--the bases. Plus, &lt;em&gt;Art Deco&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.softwaremeadows.com/posts/the_four_foundations_of_software_improvement_-_letter-size_poster/images/four-foundations.pdf"&gt;Download the PDF&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/the_four_foundations_of_software_improvement_-_letter-size_poster/images/four-foundations.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size:smaller;"&gt;Open SVG Art Deco border found &lt;a href="https://freesvg.org/art-deco-border"&gt;here&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</description>
      <pubDate>Fri, 30 Oct 2020 11:38:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/the_four_foundations_of_software_improvement_-_letter-size_poster</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/the_four_foundations_of_software_improvement_-_letter-size_poster</guid>
    </item>
    <item>
      <title>"Path" is ambiguous. Here are clear, consistent variable names.</title>
      <description>&lt;h2 id="quiz-du-jour"&gt;Quiz du jour&lt;/h2&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public void ImportRecords(string path) {}

public void ImportRecords(string file) {}

public void ImportRecords(string folder) {}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What's the argument for each of the parameters above? Does &amp;quot;path&amp;quot; include a filename? Do &amp;quot;file&amp;quot; and &amp;quot;folder&amp;quot; include a path?&lt;/p&gt;
&lt;p&gt;File system input/output is just about as old as computing itself, and yet I'll bet you see--and use!--ambiguous I/O variables all the time.&lt;/p&gt;
&lt;h2 id="clear-consistent"&gt;Clear, Consistent&lt;/h2&gt;
&lt;p&gt;Here are four variable names I've settled on to keep the meanings clear. They take just a little more effort at first, and with practice become a habit.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Means&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;fileName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;just the file name&lt;/td&gt;
&lt;td&gt;customers.csv&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;filePath&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;full path to file&lt;/td&gt;
&lt;td&gt;c:\transfer\import\customers.csv&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;folderName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;just the folder name&lt;/td&gt;
&lt;td&gt;import&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;folderPath&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;full path to the folder&lt;/td&gt;
&lt;td&gt;c:\transfer\import&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/2235173/file-name-path-name-base-name-naming-standard-for-pieces-of-a-path"&gt;language agnostic - File name? Path name? Base name? Naming standard for pieces of a path - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mikepope.com/blog/DisplayBlog.aspx?permalink=2346"&gt;Editing by analogy - mike's web log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Path_(computing)"&gt;Path (computing) - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lifewire.com/unc-universal-naming-convention-818230"&gt;Working With the Universal Naming Convention (UNC Path)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Mon, 26 Oct 2020 10:30:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/path_is_ambiguous__here_are_clear__consistent_variable_names_</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/path_is_ambiguous__here_are_clear__consistent_variable_names_</guid>
    </item>
    <item>
      <title>One Sheet Summary: Tiny Habits</title>
      <description>&lt;p&gt;I make these to post on my wall and help me learn the subject. Be sure to read the book!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwaremeadows.com/well-being"&gt;All One Sheet Summaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Tiny-Habits-BJ-Fogg-PhD/dp/B082VKLDM9"&gt;Buy the book on Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href="https://www.softwaremeadows.com/posts/one_sheet_summary-_tiny_habits/images/tiny-habits.pdf"&gt;Download the PDF Version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/one_sheet_summary-_tiny_habits/images/tiny-habits.png" alt="" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href="https://www.softwaremeadows.com/posts/one_sheet_summary-_tiny_habits/images/tiny-habits-behavior-swarming.pdf"&gt;Download the PDF Version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/one_sheet_summary-_tiny_habits/images/tiny-habits-behavior-swarming.png" alt="" /&gt;&lt;/p&gt;
</description>
      <pubDate>Sat, 24 Oct 2020 11:14:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/one_sheet_summary-_tiny_habits</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/one_sheet_summary-_tiny_habits</guid>
    </item>
    <item>
      <title>One Sheet Summary: Atomic Habits</title>
      <description>&lt;p&gt;I make these to post on my wall and help me learn the subject. Be sure to read the book!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwaremeadows.com/well-being"&gt;All One Sheet Summaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Atomic-Habits-James-Clear/dp/B07RFSSYBH"&gt;Buy the book on Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href="https://www.softwaremeadows.com/posts/one_sheet_summary-_atomic_habits/images/atomic-habits.pdf"&gt;Download the PDF Version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/one_sheet_summary-_atomic_habits/images/atomic-habits.png" alt="" /&gt;&lt;/p&gt;
</description>
      <pubDate>Sat, 24 Oct 2020 11:13:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/one_sheet_summary-_atomic_habits</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/one_sheet_summary-_atomic_habits</guid>
    </item>
    <item>
      <title>One Sheet Summary: Good Habits, Bad Habits</title>
      <description>&lt;p&gt;I make these to post on my wall and help me learn the subject. Be sure to read the book!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.softwaremeadows.com/well-being"&gt;All One Sheet Summaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.amazon.com/Good-Habits-Bad-Science-Positive/dp/1250159075"&gt;Buy the book on Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href="https://www.softwaremeadows.com/posts/one_sheet_summary-_good_habits__bad_habits/images/good-habits-bad-habits.pdf"&gt;Download the PDF Version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/one_sheet_summary-_good_habits__bad_habits/images/good-habits-bad-habits.png" alt="" /&gt;&lt;/p&gt;
</description>
      <pubDate>Sat, 24 Oct 2020 10:48:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/one_sheet_summary-_good_habits__bad_habits</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/one_sheet_summary-_good_habits__bad_habits</guid>
    </item>
    <item>
      <title>Bizarre NuGet.exe 5.7 "authors is required" behaviors</title>
      <description>&lt;p&gt;Are you using &lt;code&gt;nuget.exe&lt;/code&gt; to generate packages, especially as part of your continuous integration? If you've upgraded to version 5.7, you may be experiencing unexpected errors like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;Could not load file or assembly 'file:///C:\Program Files (x86)\NuGet CLI\nuget.exe' or one of its dependencies. Operation is not supported. (Exception from HRESULT: 0x80131515)
Using '[project]].nuspec' for metadata.
Authors is required.
Description is required.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I've &lt;a href="https://github.com/NuGet/Home/issues/9954"&gt;submitted a bug report&lt;/a&gt; which is slowly gaining traction, but to my knowledge isn't yet resolved. Here's a summary of the problem and conditions. Please follow the link for more details.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The [project].nuspec's token substitution isn't working, e.g. substituting AssemblyConfiguration for &lt;span class="math"&gt;\(author\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Applies to .Net Framework NuGet projects being packaged using &lt;code&gt;nuget.exe&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Conditions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The error will occur under the following conditions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 5.6 is named &lt;code&gt;nuget.5.6.exe&lt;/code&gt;. E.g. the command used is &lt;code&gt;nuget.5.6 pack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Version 5.7 is named &lt;code&gt;nuget.exe&lt;/code&gt;.  E.g. the command used is &lt;code&gt;nuget pack&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You may get conflicting behaviors if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have both version 5.6 and 5.7 in your PATH&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Mitigation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;nuget.exe&lt;/code&gt; version 5.6.&lt;/li&gt;
&lt;li&gt;Ensure only one &lt;code&gt;nuget.exe&lt;/code&gt; version is in the PATH&lt;/li&gt;
&lt;li&gt;Name the file &lt;code&gt;nuget.exe&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Fri, 23 Oct 2020 10:44:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/bizarre_nuget_exe_5_7_behaviors</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/bizarre_nuget_exe_5_7_behaviors</guid>
    </item>
  </channel>
</rss>