<?xml version="1.0" encoding ="UTF-8"?>
<rss xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" version="2.0">
  <channel>
    <title>Software Meadows</title>
    <description>A pleasant walk through computing</description>
    <link>https://www.softwaremeadows.com/feed</link>
    <link href="https://www.softwaremeadows.com/feed" rel="self" type="application/rss+xml" xmlns="http://www.w3.org/2005/Atom" />
    <item>
      <title>How to Hide Markdown Breadcrumbs in VS Code</title>
      <description>&lt;p&gt;Here's a quick one. If you're using &lt;a href="https://code.visualstudio.com/docs/introvideos/basics"&gt;Visual Studio Code&lt;/a&gt; as your Markdown editor and work with larger documents, such as a daily journal, VS Code's default behavior of showing breadcrumbs might be a performance drag.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/how_to_hide_markdown_breadcrumbs_in_vs_code/2022-04-06-15-59-57.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;To turn off header-level breadcrumbs when working with &lt;strong&gt;just&lt;/strong&gt; Markdown files:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;View &amp;gt; Command Palette &amp;gt;  the JSON User settings &amp;gt; Preferences: Open Settings (JSON)&lt;/li&gt;
&lt;li&gt;Add this setting
&lt;pre&gt;&lt;code class="language-json"&gt;&amp;quot;[markdown]&amp;quot;: {
    &amp;quot;breadcrumbs.showStrings&amp;quot;: false
},
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/how_to_hide_markdown_breadcrumbs_in_vs_code/2022-04-06-16-00-39.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;If you want to disable breadcrumbs for all languages, use this setting:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-json"&gt;&amp;quot;breadcrumbs.enabled&amp;quot;: false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Happy writing!&lt;/p&gt;
</description>
      <pubDate>Wed, 6 Apr 2022 15:52:05 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/how_to_hide_markdown_breadcrumbs_in_vs_code</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/how_to_hide_markdown_breadcrumbs_in_vs_code</guid>
    </item>
    <item>
      <title>Home-Job Balance: How I "End" My Job Day</title>
      <description>&lt;h2 id="previously-on-home-job-balance"&gt;Previously on &lt;em&gt;Home-Job Balance&lt;/em&gt; . . .&lt;/h2&gt;
&lt;p&gt;In my &lt;a href="https://www.softwaremeadows.com/posts/home-job-balance/"&gt;previous post&lt;/a&gt;, I submitted that a big step toward improving work/life balance is to replace that phrase with &amp;quot;home-job balance.&amp;quot; Doing so corrects several problems with the current phrase, and brings our attention where it often belongs: &lt;strong&gt;home&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I'm going to answer the questions I asked in that post and give some tips on how I &amp;quot;close up shop&amp;quot; for the day, which I can do &lt;em&gt;at any time&lt;/em&gt; during the day.&lt;/p&gt;
&lt;h2 id="when-am-i-at-home-vs-at-the-job"&gt;When am I at home vs at the job?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Job&lt;/strong&gt;&lt;br /&gt;
It's startlingly easier for me to identify when and where I'm on the job than at home.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When I'm performing tasks specifically for my company or my company's client (I work for a &lt;a href="https://clearmeasure.com/"&gt;consulting company&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;When I'm reading company and client messages (Slack, email).&lt;/li&gt;
&lt;li&gt;When I'm getting company/client notifications (meetings, messages, tasks).&lt;/li&gt;
&lt;li&gt;At my computer with certain folders and applications open, such as client code repositories, Visual Studio, Azure DevOps.&lt;/li&gt;
&lt;li&gt;Reading subject articles to complete my tasks.&lt;/li&gt;
&lt;li&gt;Reading general articles/books for my career. This includes reading blog posts like the one I'm writing!&lt;/li&gt;
&lt;li&gt;I feel on the job if I'm talking about my job to family and friends with my attention on solving job problems, not just describing what I do.&lt;/li&gt;
&lt;li&gt;Likewise, I'm on the job if I'm &lt;em&gt;dwelling&lt;/em&gt; on my job when I don't have to be.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Home&lt;/strong&gt;&lt;br /&gt;
It'd be a mistake to decide I feel at home when I'm not doing my job.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Being home can't be &amp;quot;the absense of job.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are some ways I feel at home.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Working on house projects, especially when they're nice to do instead of &amp;quot;must do.&amp;quot; I had to clean the garage door rails because the door kept (and, sigh, keeps) sticking. I crafted and installed a little shelf across the kitchen window for my wife's herbs. I felt at home with both, and enjoyed the second more.&lt;/li&gt;
&lt;li&gt;Being in the living room with my wife and dog. It often doesn't matter what I'm doing. They're close and they matter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above involve being physically at home. But home doesn't have to be a place. A house isn't always a home. Some other ways I feel at home are,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reading a book. The less it's related to my career, the more at home I feel. Fiction brings me home because I grew up entering the worlds of imagination.&lt;/li&gt;
&lt;li&gt;Watching TV or movies. Like books, these take me out of my job and into other lives. Note that I do these on my computer.&lt;/li&gt;
&lt;li&gt;Walking my neighborhood. I'm lucky to live somewhere I enjoy.&lt;/li&gt;
&lt;li&gt;Exercising, especially either being instructed or leading a class.&lt;/li&gt;
&lt;li&gt;Having earnest and playful conversations with family and friends.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="keeping-my-job-separate-when-it-uses-the-same-place-and-tools"&gt;Keeping my job separate when it uses the same place and tools&lt;/h2&gt;
&lt;p&gt;I do my job in my home office at my laptop. I also do home stuff in my home office on the same laptop. It's not productive for me to maintain two different laptops. Here's what I do to cue myself &amp;quot;this is the job, Dude.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Different browsers and/or profiles&lt;/strong&gt;&lt;br /&gt;
I use Brave for my home browsing and Edge for my work browsing.&lt;/p&gt;
&lt;p&gt;In Edge, I have two job profiles: my company and my client. To make switching between those two easier, I loaded my company profile and pinned that instance to my Windows task bar. Then I loaded my client profile and pinned that instance.&lt;/p&gt;
&lt;p&gt;The result is it's faster and easier for me to open Edge with the needed bookmarks and security context in place.&lt;/p&gt;
&lt;p&gt;Notice I put Home first?&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/home-job_balance__how_i__end__my_job_day/2022-01-22-07-18-21.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Clearly separate job folders&lt;/strong&gt;&lt;br /&gt;
I have a high-level job folder, and no personal projects go in that. Recently, I made another change I love. I have separate high-level Git repository folders for my job and personal projects.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\source &amp;lt;= ONLY client repos
|_project 1
|_project 2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;C:\users\charl\source\repos &amp;lt;= ONLY personal repos
|_project 1
|_project 2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;UPDATE 20220126: Reader Avesh Jain sent me the following nice suggestion.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One tip I'd like to mention is using virtual desktops. I keep a virtual desktop for personal apps and browsers, and one for each client/project. I pin common applications so they appear on all virtual desktops (e.g., OneNote).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="leaving-the-job-for-the-day"&gt;Leaving the job for the day&lt;/h2&gt;
&lt;p&gt;I have a loose ritual I can do at any time to signal to myself &amp;quot;I'm done with my job for the day&amp;quot; or &amp;quot;done for now.&amp;quot;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Close job-specific browsers&lt;/strong&gt;&lt;br /&gt;
I close my job Edge browsers. But what if I have a couple dozen browser tabs open for a job project? I use a cool extension like &lt;a href="https://qlearly.com/"&gt;Qlearly&lt;/a&gt; to save them all, and can reopen when I'm on the job again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Close job-specific apps&lt;/strong&gt;&lt;br /&gt;
Some apps I only use for my job, for example Slack. Slack &amp;quot;closes&amp;quot; to the notification area. I right-click that icon and Quit the app. Bam, Slack, you no longer control me!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Close File Explorer showing job folders&lt;/strong&gt;&lt;br /&gt;
Not minimize. Close. I add friction to looking at my job's work.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Confession: I actually use the terrific &lt;a href="http://www.freecommander.com/"&gt;FreeCommander XE&lt;/a&gt; paid version to manage my files. My job folder tabs are in the left pane. I close those tabs, or close the app, or at least minimize it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Close any windows showing job-related documents&lt;/strong&gt;&lt;br /&gt;
For me, this can be: Visual Studio, VS Code, Word, Excel, Balsamiq, LINQPad . . . you get the point.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I &lt;em&gt;know&lt;/em&gt;. In your mind you're thinking, &amp;quot;But I just need to open them all again and pick up where I left off. It's so much &lt;em&gt;easier&lt;/em&gt; to leave them open.&amp;quot;&lt;/p&gt;
&lt;p&gt;That's true. It's easier. That's the point. You're making it &lt;strong&gt;easy to stay on the job&lt;/strong&gt;. Instead, make it easy to be at home.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Say, &amp;quot;I'm going home&amp;quot;&lt;/strong&gt;&lt;br /&gt;
This sounds silly. It isn't, and it takes one second. Try it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Close my laptop lid&lt;/strong&gt;&lt;br /&gt;
If I've had a really tough day.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Walk away from my computer&lt;/strong&gt;&lt;br /&gt;
I was surprised how much difference it makes to physically go to another room where my computer isn't. I'll go back to it later &lt;em&gt;on my own terms&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do something that makes me feel at home&lt;/strong&gt;&lt;br /&gt;
You know, from that list I made.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Maybe I'll open my computer again fifteen minutes later to shop for new bed sheets. Fine. &lt;em&gt;I've given myself the end-of-job cue and a break I deserve right now.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="final-thoughts-notifications"&gt;Final Thoughts: Notifications&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;What and who are you putting first all the time? Have you made yourself &amp;quot;always available&amp;quot;?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By default, lots of computer and phone apps have their notification turned on. Schedule yourself some self-care time to learn your app settings, have a heart-to-heart with yourself, and turn off whatever you can.&lt;/p&gt;
&lt;p&gt;For example: Slack/Teams/Discord users, ask yourself, &amp;quot;Which channels are &lt;em&gt;urgent&lt;/em&gt;, if any?&amp;quot; I hope for you the initial answer isn't &amp;quot;all of them&amp;quot;! I set up Slack so I only get notified on a couple of channels and if I get a direct mention. When I quit Slack on my computer, I know I'll still get emergency notifications on my phone.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you're on the job, put it first. &lt;strong&gt;When you're at home, put it first.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <pubDate>Sat, 22 Jan 2022 07:00:46 -0700</pubDate>
      <link>https://www.softwaremeadows.com/posts/home-job_balance__how_i__end__my_job_day</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/home-job_balance__how_i__end__my_job_day</guid>
    </item>
    <item>
      <title>The difference between a self-managing team and a managed team</title>
      <description>&lt;p&gt;This won't take long, but helped bring things into focus for me.&lt;/p&gt;
&lt;p&gt;The first one's &lt;strong style="color:green;"&gt;Agile&lt;/strong&gt;. The second one's &lt;strong style="color:red;"&gt;bureaucracy&lt;/strong&gt;.&lt;/p&gt;
&lt;div style="margin-bottom:35px;"&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;div style="font-size:3em;"&gt;
&lt;span&gt;Self-Managing Team&lt;/span&gt;
&lt;div style="font-size:0.6em;"&gt;"&lt;strong style="color:green;"&gt;We&lt;/strong&gt; hold each other accountable."&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:3em;margin-top:0.5em;"&gt;
&lt;span&gt;Managed Team&lt;/span&gt;
&lt;div style="font-size:0.6em;"&gt;"&lt;strong style="color:red"&gt;I&lt;/strong&gt; hold you all accountable."&lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div style="margin-bottom:70px;"&gt;&lt;/div&gt;
</description>
      <pubDate>Sat, 15 Jan 2022 20:18:30 -0700</pubDate>
      <link>https://www.softwaremeadows.com/posts/the_difference_between_a_self-managing_team_and_a_managed_team</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/the_difference_between_a_self-managing_team_and_a_managed_team</guid>
    </item>
    <item>
      <title>Change the Phrase to "Home-Job Balance"</title>
      <description>&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/home-job-balance/images/home-job-balance.png" alt="" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I'm on a mission. It's a doomed mission primarily because I'm a little-known software engineer who's read by--maybe--a dozen people in the world. But that's OK. If my mission appeals to you, then that's a little bit of success in my life.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My mission is to change the phrase &amp;quot;work-life balance&amp;quot; to &amp;quot;HOME-JOB BALANCE&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Making my case won't take long. Here it is.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;Work-life balance&amp;quot; promotes a completely wrong mental model from the start. It's saying that there are two areas of existence: work and life. Anything outside of work is life, and &lt;em&gt;life isn't part of work&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;It's also implying &amp;quot;we shouldn't have to work at our lives.&amp;quot;&lt;/li&gt;
&lt;li&gt;Finally, the syntax puts &amp;quot;work&amp;quot; at the front, when our &lt;em&gt;home lives&lt;/em&gt; are what we're routinely missing out on. Home should come first.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We all know &amp;quot;work vs. life&amp;quot; is wrong. Work is &lt;em&gt;part&lt;/em&gt; of our lives, it's part of life. With the increase in remote work--note: &lt;strong&gt;work&lt;/strong&gt; from &lt;strong&gt;home&lt;/strong&gt;--we need to be clear about what we're balancing.&lt;/p&gt;
&lt;p&gt;&amp;quot;Work&amp;quot; isn't something we just do for our jobs. We work at being good spouses, good friends, good parents, at taking care of our bodies and minds. Work isn't bad.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So, what I'm balancing isn't work and life. What I'm balancing are my home and my job. When and where am I &amp;quot;at home&amp;quot;? When and where am I &amp;quot;on the job&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is hard, for sure, especially for workers who have children or are caregivers for relatives. I think it becomes easier when we stop thinking about &amp;quot;work&amp;quot; and &amp;quot;life,&amp;quot; and frame our lives as &amp;quot;home&amp;quot; and &amp;quot;job.&amp;quot;&lt;/p&gt;
&lt;p&gt;This is the first article, the &amp;quot;what&amp;quot; of the mission. My next will give guidance on how, a lot of which others have already written about.&lt;/p&gt;
&lt;p&gt;In the meantime, here are some questions to answer:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HOME&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Where&lt;/em&gt; do I feel &amp;quot;at home&amp;quot;?&lt;/li&gt;
&lt;li&gt;&lt;em&gt;When&lt;/em&gt; do I feel &amp;quot;at home&amp;quot;?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;JOB&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Where&lt;/em&gt; do I do my job?&lt;/li&gt;
&lt;li&gt;&lt;em&gt;When&lt;/em&gt; do I do my job?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;CRUCIAL DIFFERENCES&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What separates--or can separate--being &amp;quot;at home&amp;quot; from being &amp;quot;on the job&amp;quot;?&lt;/li&gt;
&lt;li&gt;What are my rewards for keeping them separate?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll post again soon!&lt;/p&gt;
</description>
      <pubDate>Sun, 2 Jan 2022 16:00:00 -0700</pubDate>
      <link>https://www.softwaremeadows.com/posts/home-job-balance</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/home-job-balance</guid>
    </item>
    <item>
      <title>Agile Development - Don't Restrict. Trust</title>
      <description>&lt;p&gt;Lots of organizations try to prevent developers from making mistakes, or catch them doing so, leading to more bureaucracy and over-control. Some examples include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Requiring all teams to follow the exact same process.&lt;/li&gt;
&lt;li&gt;Using permissions to keep developers from rebasing code with Git.&lt;/li&gt;
&lt;li&gt;Managers external to the team running compliance reports on whether user stories are filled in &amp;quot;correctly.&amp;quot;&lt;/li&gt;
&lt;li&gt;Penalizing developers using development issues/bugs as a metric.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's look at that last one more closely. One of the DORA group's &lt;a href="https://cloud.google.com/blog/products/devops-sre/using-the-four-keys-to-measure-your-devops-performance"&gt;Four Metrics&lt;/a&gt; is to capture how often release failures occur. One way to think of that is &amp;quot;how many severe bugs are we getting after release?&amp;quot;&lt;/p&gt;
&lt;p&gt;It's tempting, then, to also track how many issues/bugs are found during development, the notion being that reducing bugs during development naturally reduces them in release. But this is wrong headed. There &lt;em&gt;could&lt;/em&gt; be value in looking at issues found during development, but it's wrong to use this to evaluate, praise or punish developers. Why?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;More issues found during development isn't good or bad.&lt;/li&gt;
&lt;li&gt;Context is missing if you're only looking at numbers.&lt;/li&gt;
&lt;li&gt;Whether and how development issues are reported is highly person-dependent.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short, you can't tell whether a developer is doing a good job based on development issues. That isn't why you'd capture development issue metrics. You would capture them as one metric to compare the effects of making development changes. For example, a team commits to increasing unit test quality. What affect did that have on the number of issues found?&lt;/p&gt;
&lt;p&gt;What are you even tracking? Is it the number and severity of issues found by QA? That might be OK. But how do you know that Billy has the same standard for &amp;quot;severe&amp;quot; as Claudia? Maybe Rahim breaks down an issue into more bug reports than Luciana.&lt;/p&gt;
&lt;p&gt;This is when bureaucratic management tries to get everyone working the same way with endless meetings on &amp;quot;what does severe mean?&amp;quot; and &amp;quot;what's the right way to report issues?&amp;quot; Some of this matters, sure. But thinking this way more often misses the point. Its focus is on treating people as replaceable resources, as machines.&lt;/p&gt;
&lt;p&gt;The coercive style of management has these qualities:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Restrict. Prevent. Catch. Punish.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Those qualities can be summed up as &amp;quot;Developers, we don't trust you.&amp;quot;&lt;/p&gt;
&lt;p&gt;What if, instead, we use a reliable metric--change failure rate--to guide improvement? Further, what if we let the teams figure out how to make that improvement, allow for mistakes, and measure what matters? We'd end up with a trusted team.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/dont_restrict_trust/trust-audit-notify-help.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;In a Trust Team environment, you&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Give your developers more permissions.&lt;/li&gt;
&lt;li&gt;But also keep audit trails so if something goes wrong we know who did what.&lt;/li&gt;
&lt;li&gt;Create a robust system that can be recovered quickly.&lt;/li&gt;
&lt;li&gt;Notify developers of problems automatically and immediately.&lt;/li&gt;
&lt;li&gt;Help understand what caused issues and how to improve.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, let's dig into that last one and contrast to an untrusted team.&lt;/p&gt;
&lt;p&gt;In the untrusted team, if a severe bug is discovered, several assumptions are made.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One person is at fault. The team isn't treated as a unit.&lt;/li&gt;
&lt;li&gt;The developer made a mistake. There's someone to blame.&lt;/li&gt;
&lt;li&gt;The bug could have been prevented.&lt;/li&gt;
&lt;li&gt;There needs to be a meeting to put procedures in place to keep it from happening again.&lt;/li&gt;
&lt;li&gt;Non-team management is needed to enforce the new process.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a trusted team,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The team takes responsibility, knowing multiple people work on the code.&lt;/li&gt;
&lt;li&gt;The developer may have made a mistake. But there's no blaming because mistakes are part of development.&lt;/li&gt;
&lt;li&gt;Not everything is in our control. Software's very complex. The developer may have made the right decision, even though there was a poor outcome. You can't prevent all bugs.&lt;/li&gt;
&lt;li&gt;Adding process &lt;em&gt;adds complexity&lt;/em&gt; to an already complex business. Sometimes process needs improvment. But often there's nothing to fix.&lt;/li&gt;
&lt;li&gt;As soon as external management insists on compliance reports, the team ceases to be self-managing. Quality will go down, because the focus shifts from building software to pleasing management.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the future, when something goes wrong:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Determine and explain the impact on the overall business.&lt;/li&gt;
&lt;li&gt;Let the team sort things out.&lt;/li&gt;
&lt;li&gt;Ask them to inform management what, if anything, will change.&lt;/li&gt;
&lt;li&gt;Trust their answer.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Build trust, not scapegoats.&lt;/p&gt;
</description>
      <pubDate>Tue, 28 Dec 2021 10:45:00 -0700</pubDate>
      <link>https://www.softwaremeadows.com/posts/dont_restrict_trust</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/dont_restrict_trust</guid>
    </item>
    <item>
      <title>2021 DORA Explorer - My Highlights from the State of DevOps report</title>
      <description>&lt;p&gt;In my opinion, for what we do as our business, the DORA group's work is among the most important for us to understand and use. It's the best resource I know to provide software delivery guidance that's based in evidence, not hearsay and personal opinion.&lt;/p&gt;
&lt;p&gt;I recommend downloading and reading the complete PDF from the web site.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.google.com/blog/products/devops-sre/announcing-dora-2021-accelerate-state-of-devops-report"&gt;2021 Accelerate State of DevOps report addresses burnout, team performance&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;br /&gt;
ALL excerpts below are directly quoted via copy/paste from the linked 2021 DevOps report. Extra emphases are mine. They're what stood out to me, and they won't be what stand out to you!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="the-5-metrics"&gt;The 5 Metrics&lt;/h2&gt;
&lt;p&gt;With seven years of data collection and research, we have developed and validated four metrics that measure software delivery performance. Since 2018, we’ve included a fifth metric to capture operational capabilities.&lt;/p&gt;
&lt;p&gt;Note that these metrics focus on system-level outcomes, which helps avoid the common pitfalls of software metrics, such as pitting functions against each
other and making local optimizations at the cost of overall outcomes.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/2021_dora_explorer_my_highlights/five-metrics.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.softwaremeadows.com/posts/2021_dora_explorer_my_highlights/elite-performers.png" alt="" /&gt;&lt;/p&gt;
&lt;h2 id="cloud"&gt;Cloud&lt;/h2&gt;
&lt;p&gt;Respondents who use hybrid or multi-cloud were 1.6 times more likely to exceed their organizational performance targets
than those who did not.&lt;/p&gt;
&lt;p&gt;Unsurprisingly, respondents who have adopted multiple cloud providers were 1.5 times as more likely to meet or exceed their reliability targets.&lt;/p&gt;
&lt;p&gt;For the third time, we find that what really matters is how teams implement their cloud services, not just that they are using cloud technologies. Elite performers were 3.5 times more likely to have met all essential NIST cloud characteristics.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;On-demand self-service&lt;/strong&gt; Consumers can provision computing resources as needed, automatically, without any human interaction required on the part of the provider.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Broad network access&lt;/strong&gt; Capabilities are widely available and can be accessed through multiple clients such as mobile phones, tablets, laptops, and workstations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resource pooling&lt;/strong&gt;  Provider resources are pooled in a multi-tenant model, with physical and virtual resources dynamically assigned and reassigned on-demand. The customer generally has no direct control over the exact location of the provided resources, but can specify location
at a higher level of abstraction, such as country, state, or data center.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rapid elasticity&lt;/strong&gt; Capabilities can be elastically provisioned and released to rapidly scale outward or inward with demand. Consumer capabilities available for provisioning appear to be unlimited and can be appropriated in any quantity at any time.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Measured service&lt;/strong&gt; Cloud systems automatically control and optimize resource use by leveraging a metering capability at a level of abstraction appropriate to the type of service, such as storage, processing, bandwidth, and active user accounts. Resource usage can be monitored,
controlled, and reported for transparency.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="sre-and-devops"&gt;SRE and DevOps&lt;/h2&gt;
&lt;p&gt;While the DevOps community was emerging at public conferences and conversations, a like-minded movement was forming inside Google: site reliability engineering (SRE). . . . SRE is a learning discipline that prioritizes cross-functional communication and psychological safety, the same values that are at the core of the performance-oriented generative culture typical of elite DevOps teams.&lt;/p&gt;
&lt;p&gt;In analyzing the results, we found evidence that teams who excel at these modern operational practices are 1.4 times more likely to report greater
SDO performance, and 1.8 times more likely to report better business outcomes.&lt;/p&gt;
&lt;p&gt;Typically, individuals with a heavy load of operations tasks are prone to burnout, but SRE has a positive effect. We found that the more a team employs SRE practices, the less likely its members are to experience burnout.&lt;/p&gt;
&lt;h2 id="documentation"&gt;Documentation&lt;/h2&gt;
&lt;p&gt;This year, we looked at the quality of internal documentation, which is documentation–such as manuals, READMEs, and even code comments–for the services and applications that a team works on. We measured documentation quality by the degree to which the documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;helps readers accomplish their goals&lt;/li&gt;
&lt;li&gt;is accurate, up-to-date, and comprehensive&lt;/li&gt;
&lt;li&gt;is findable, well organized, and clear&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We found that about 25% of respondents have good quality documentation, and the impact of this documentation work is clear: teams with higher quality documentation are 2.4 times more likely to see better software delivery and operational (SDO) performance.&lt;/p&gt;
&lt;h2 id="security"&gt;Security&lt;/h2&gt;
&lt;p&gt;[Shift left] and integrate throughout As technology teams continue to accelerate and evolve, so do the quantity and sophistication of security threats. In 2020, more than 22 billion records of confidential personal information or business data were exposed, according to Tenable’s 2020 Threat Landscape Retrospective Report.6 Security can’t be an afterthought or the final step before delivery, it must be integrated throughout the software development process.&lt;/p&gt;
&lt;p&gt;Consistent with previous reports, we found that elite performers excel at implementing security practices. This year, elite performers who met or exceeded their reliability targets were twice as likely to have security integrated in their software development process.&lt;/p&gt;
&lt;h2 id="technical-devops-capabilities"&gt;Technical DevOps capabilities&lt;/h2&gt;
&lt;p&gt;Our research shows that organizations who undergo a DevOps transformation by adopting continuous delivery are more likely to have processes that are high quality, low-risk, and cost-effective.&lt;/p&gt;
&lt;p&gt;Specifically, we measured the following technical practices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Loosely coupled architecture&lt;/li&gt;
&lt;li&gt;Trunk-based development&lt;/li&gt;
&lt;li&gt;Continuous testing&lt;/li&gt;
&lt;li&gt;Continuous integration&lt;/li&gt;
&lt;li&gt;Use of open source technologies&lt;/li&gt;
&lt;li&gt;Monitoring and observability practices&lt;/li&gt;
&lt;li&gt;Management of database changes&lt;/li&gt;
&lt;li&gt;Deployment automation&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;We found that while all of these practices improve continuous delivery, &lt;strong&gt;loosely coupled architecture&lt;/strong&gt; and &lt;strong&gt;continuous testing&lt;/strong&gt; have the greatest impact&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Elite performers who meet their reliability targets are 5.8 times more likely to leverage continuous integration. In continuous integration, each commit triggers a build of the software and &lt;em&gt;runs a series of automated tests that provide feedback in a few minutes.&lt;/em&gt; With continuous integration, you decrease the manual and often complex coordination needed for a successful integration.&lt;/p&gt;
&lt;h2 id="covid-19"&gt;COVID-19&lt;/h2&gt;
&lt;p&gt;What reduced burnout?&lt;/p&gt;
&lt;p&gt;Despite this, we did find a factor that had a large effect on whether or not a team struggled with burnout as a result of working remotely: culture. Teams with a &lt;strong&gt;generative team culture&lt;/strong&gt;, composed of people who felt included and like they belonged on their team, were half as likely to experience burnout during the pandemic. This finding reinforces the importance of prioritizing team and culture. Teams that do better are equipped to weather more challenging periods that put pressure on both the team as well as on individuals.&lt;/p&gt;
&lt;h2 id="culture"&gt;Culture&lt;/h2&gt;
&lt;p&gt;Broadly speaking, culture is the inescapable interpersonal undercurrent of every organization. It is anything that influences how employees think,
feel, and behave towards the organization and one another. All organizations have their own unique culture, and our findings consistently show that culture is one of the top drivers of organizational and IT performance. Specifically, our analyses indicate that a &lt;strong&gt;generative  culture&lt;/strong&gt;–measured using the Westrum organizational culture typology, and people’s sense of belonging and inclusion within the organization–
predicts higher software delivery and operational (SDO) performance. For example, we find that elite performers that meet their reliability targets are 2.9 times more likely to have a generative team culture than their low-performing counterparts.&lt;/p&gt;
&lt;p&gt;Our results indicate that performance-oriented organizations that value belonging and inclusion are more likely to have lower levels of employee
burnout compared to organizations with less positive organizational cultures.&lt;/p&gt;
&lt;p&gt;Given the evidence showing how psycho-social factors affect SDO performance and levels of burnout among employees, we recommend that if you’re seeking to go through a successful DevOps transformation, you invest in addressing culture-related issues as part of your transformation efforts.&lt;/p&gt;
</description>
      <pubDate>Sun, 5 Dec 2021 15:45:00 -0700</pubDate>
      <link>https://www.softwaremeadows.com/posts/2021_dora_explorer_my_highlights</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/2021_dora_explorer_my_highlights</guid>
    </item>
    <item>
      <title>Azure DevOps Locally-Hosted Build Agent With Global NPM/.NET Tools</title>
      <description>&lt;h2 id="bluf"&gt;BLUF&lt;/h2&gt;
&lt;p&gt;Terse examples of installing NPM global packages and .NET global tools for use by locally-hosted Azure DevOps build agents. Removes having to install as part of the pipeline YAML, and reduces chances of contention if multiple agents run on same machine.&lt;/p&gt;
&lt;p&gt;Basically, install to a folder that's on the PATH.&lt;/p&gt;
&lt;h2 id="net-tools"&gt;.NET Tools&lt;/h2&gt;
&lt;p&gt;The instructions below assume an E: drive. Alter to fit your server.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Once, as Administrator&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;# Prep global tools directory
$dotnetTools = &amp;quot;E:\dotnet-tools&amp;quot;
New-Item $dotnetTools -ItemType Directory
$path = [Environment]::GetEnvironmentVariable('PATH', 'Machine')
$newpath = $path + &amp;quot;;$dotnetTools&amp;quot;
[Environment]::SetEnvironmentVariable(&amp;quot;PATH&amp;quot;, $newpath, 'Machine')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To view what's already installed.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;$dotnetTools = &amp;quot;E:\dotnet-tools&amp;quot;
dotnet tool list --tool-path $dotnetTools
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;$dotnetTools = &amp;quot;E:\dotnet-tools&amp;quot;
dotnet tool install dotnet-ef --version 3.1.5 --tool-path $dotnetTools
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="npm"&gt;NPM&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Once, as Administrator&lt;/strong&gt;&lt;br /&gt;
Before doing these steps, confirm the directory isn't already on the machine PATH. Basically, find out where NPM packages, if any, are already installed. Below is the default folder.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;# Prep global packages directory
# Verify NodeJs is installed here:
$nodePath = &amp;quot;C:\Program Files\nodejs&amp;quot;
$path = [Environment]::GetEnvironmentVariable('PATH', 'Machine')
$newpath = $path + &amp;quot;;$nodePath&amp;quot;
[Environment]::SetEnvironmentVariable(&amp;quot;PATH&amp;quot;, $newpath, 'Machine')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To view what's already installed.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;$nodePath = &amp;quot;C:\Program Files\nodejs&amp;quot;
npm prefix
npm config set prefix $nodePath
npm list --global --depth=0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;$nodePath = &amp;quot;C:\Program Files\nodejs&amp;quot;
npm prefix
npm config set prefix $nodePath
npm install --global vsts-npm-auth
npm install --global azure-functions-core-tools@3 --unsafe-perm true
npm install --global aurelia-cli@1.3.1
npm install --global @angular/cli@12.0.1
npm install --global nswag
&lt;/code&gt;&lt;/pre&gt;
</description>
      <pubDate>Tue, 12 Oct 2021 16:48:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/azure_devops_locally-hosted_build_agent_with_global_npm-_net_tools</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/azure_devops_locally-hosted_build_agent_with_global_npm-_net_tools</guid>
    </item>
    <item>
      <title>Developing With Project Dependencies - When to Package, When Not To</title>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;One last thought first&lt;/strong&gt;&lt;br /&gt;
This article uses the .NET framework and development for its examples. However, the principles described should apply to most languages and frameworks. For example, the issues and approach can be taken with Angular applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="contents"&gt;Contents&lt;/h2&gt;
&lt;!-- Start Document Outline --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#packages-are-good"&gt;Packages Are Good!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-developers-essential-desire"&gt;The Developer's Essential Desire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-practical-difference-between-external-and-internal-dependencies"&gt;The Practical Difference Between External and Internal Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-fundamental-conflicts"&gt;The Fundamental Conflicts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#challenging-assumptions"&gt;Challenging Assumptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a-simple-heuristic"&gt;A Simple Heuristic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-blocks"&gt;Building Blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#a-common-folder-structure"&gt;A Common Folder Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#repositories"&gt;Repositories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#meta-solution-files"&gt;Meta-Solution Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#simultaneous-development-with-packages-if-you-must"&gt;Simultaneous Development With Packages, If You Must&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-versioning-puzzle---in-general"&gt;The Versioning Puzzle - In General&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-versioning-puzzle---nuget-packages-in-particular"&gt;The Versioning Puzzle - NuGet Packages In Particular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wrap-up"&gt;Wrap Up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- End Document Outline --&gt;
&lt;h2 id="credits"&gt;Credits&lt;/h2&gt;
&lt;p&gt;I wrote most of this, so I get a bunch of the credit. But it wouldn't be as good if my colleagues at &lt;a href="https://clearmeasure.com/"&gt;Clear Measure&lt;/a&gt; hadn't reviewed my words and provided thoughtful questions and debate. They especially clarified to me that the message of the document should be positive toward packaging, that packaging is a critical and established technique for creating performant, maintainable, and scalable business applications.&lt;/p&gt;
&lt;p&gt;So, thank you Trish Polay and Mike Sigsworth. You rock!&lt;/p&gt;
&lt;p&gt;I don't consider this the last word on this subject. My views will evolve, and I want this article to evolve with them. Stay tuned!&lt;/p&gt;
&lt;h2 id="packages-are-good"&gt;Packages Are Good!&lt;/h2&gt;
&lt;p&gt;This document examines when it makes sense to publish shared dependencies as packages vs maintaining project references. A strong case is made that shared code doesn't &lt;em&gt;have&lt;/em&gt; to become packages. However, this shouldn't be taken as affirming shared project references as &lt;em&gt;desirable.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The question is less whether you'll be packaging reusable bits of your code base, and more &lt;em&gt;when&lt;/em&gt;. If you're developing a large enterprise application, breaking it into smaller, independently developed, tested, and deployed services has important benefits. At minimum, this means implementing something like an Onion Architecture informed by Domain-Driven Design. For high-scalability, microservices can become a strong choice.&lt;/p&gt;
&lt;p&gt;There's little doubt that developing independent--yet related--projects is more difficult than a monolith where all the code is available all at once. But difficulty isn't the only factor to consider. A loosely-coupled architecture that's easier to test, faster to deploy, and more resilient to change, pays for itself many times over, even if daily development takes more time or effort.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Beware coding by expedience. Technical debt is sure to quickly accrue.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The guidance below is when it makes sense to use packages given how your code is &lt;em&gt;today&lt;/em&gt;. Maybe you're working in a monolith and packaging isn't a good near-term decision. But &lt;em&gt;don't&lt;/em&gt; make that your long-term decision. Really.&lt;/p&gt;
&lt;p&gt;Here are some examples of how you can think about it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We're starting a new code base with shared code. What do we do?&lt;/em&gt;&lt;br /&gt;
Try putting some shared code in its own repo. Figure out how that works.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Maybe our new code base has code that &lt;em&gt;might&lt;/em&gt; be shared, but isn't yet.&lt;/em&gt;&lt;br /&gt;
That's OK Likewise try putting the shared code in its own repo.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We have shared projects. But when we pull them out, developing the independently becomes a headache. What do we do?&lt;/em&gt;&lt;br /&gt;
Reexamine the code. Instead of assuming your projects &lt;em&gt;as they are&lt;/em&gt; should become packages, try extracting code from those projects into good packages.&lt;/p&gt;
&lt;p&gt;As you read below, you may be tempted to stick with your monolith and eschew packages. That's not what I want. I want you to build an environment where you can develop high quality, less complex, loosely-coupled applications quickly. You may not be there today, but that's where you're headed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In all of the above, you won't get it right the first time. Your code will evolve along with your understanding. You'll need help and find out how other shops do it. Expect that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="the-developers-essential-desire"&gt;The Developer's Essential Desire&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Work on all parts of the application at the same time&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="the-practical-difference-between-external-and-internal-dependencies"&gt;The Practical Difference Between External and Internal Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;External dependency packages are intended for generic use cases&lt;/li&gt;
&lt;li&gt;Internal dependency projects are for specific applications&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both are dependencies, but who uses them are different. An external package like Json.Net doesn't know who's using it. An internal dependency like CustomerContractService is developed &lt;em&gt;for specific applications&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id="the-fundamental-conflicts"&gt;The Fundamental Conflicts&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Loose coupling says projects can be developed, tested, and deployed independently.&lt;/li&gt;
&lt;li&gt;But related projects benefit from developing, testing, and deploying together.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;External packages don't have specific parent dependencies, so they can be developed independently and reside in their own repository and solution workspace. Internal applications have shared dependencies that need to be developed simultaneously.&lt;/p&gt;
&lt;p&gt;These two development models are at odds.&lt;/p&gt;
&lt;p&gt;For external packages,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The parent references the package dependency, which is downloaded from a store&lt;/li&gt;
&lt;li&gt;The package dependency's code isn't changed&lt;/li&gt;
&lt;li&gt;The package version is changed externally, and the parent chooses when to upgrade&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For internal dependencies,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The parent references the project dependency, which is in a relative path&lt;/li&gt;
&lt;li&gt;Changes to the parent and dependency are committed to source control together&lt;/li&gt;
&lt;li&gt;The package version is changed at the same time for the package and parent&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The two critical concerns are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Internal dependencies have a &lt;strong&gt;fixed relative path&lt;/strong&gt; stored in source control&lt;/li&gt;
&lt;li&gt;A parent expects the dependency to exist when submitted to continuous integration&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id="challenging-assumptions"&gt;Challenging Assumptions&lt;/h2&gt;
&lt;p&gt;There are several reasons a development shop may decide to separate dependencies into packages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clarify the code base by explicitly decoupling the dependency&lt;/li&gt;
&lt;li&gt;Allow greater or easier consumption of the dependency&lt;/li&gt;
&lt;li&gt;Easily share reusable code between projects that live in separate repositories and are worked on by independent teams&lt;/li&gt;
&lt;li&gt;Allow independent projects to choose when to upgrade to new version of shared code&lt;/li&gt;
&lt;li&gt;A belief creating packages is how it &amp;quot;should&amp;quot; be done for separation of concerns, loose coupling, domain-driven design, microserves, etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Several of these reasons can be challenged, especially the last. Here are some questions to ask yourself and team.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Imagine the dependency is a third arty open source project. How would that affect our application development?&lt;/li&gt;
&lt;li&gt;If we don't package our dependencies, is our coding easier or harder? Which parts?&lt;/li&gt;
&lt;li&gt;Does an application &lt;em&gt;have&lt;/em&gt; to change the dependency code during feature development? If so, why? If not, how long can the application wait for the package to have the new changes?&lt;/li&gt;
&lt;li&gt;Is committing a relative path a hinderance? Is it real or reactive? Can our group establish a common structure for shared project dependencies?&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Seriously, if you don't need packages, don't create them. You can still have loosely-coupled shared code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="a-simple-heuristic"&gt;A Simple Heuristic&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Not all shared dependencies should be packages.&lt;/strong&gt;&lt;/em&gt; That's a critical message to take away from this article. It's easy to &lt;em&gt;think&lt;/em&gt; our development lives would be easier by packaging all our shared dependencies, but that isn't true.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the dependency is usually developed in lockstep with the parent, don't make it a package.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For examples, these probably &lt;em&gt;aren't&lt;/em&gt; good choices for packages&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A CustomerService assembly&lt;/li&gt;
&lt;li&gt;An Entity Framework repository assembly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Candidates for internal packages have these qualities&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don't change major functionality frequently&lt;/li&gt;
&lt;li&gt;Are highly backward-compatible&lt;/li&gt;
&lt;li&gt;Who uses them doesn't have to be known&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are some examples. Typically these are customized for the business and are application-agnostic.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Security libraries. Great choice.&lt;/li&gt;
&lt;li&gt;Type manipulation libraries&lt;/li&gt;
&lt;li&gt;Networking libraries&lt;/li&gt;
&lt;li&gt;Libraries that work across domains&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What do I mean by that last one? Let's say you're practicing Domain-Driven Design. You've segregated your domains and created separate repositories per domain. However, you find there are some domain behaviors that apply to all domains &lt;em&gt;and&lt;/em&gt; need to be consistent. Those may be a candidate for a package.&lt;/p&gt;
&lt;h2 id="building-blocks"&gt;Building Blocks&lt;/h2&gt;
&lt;p&gt;These are the building blocks we're dealing with.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Source control&lt;/li&gt;
&lt;li&gt;Project vs package references&lt;/li&gt;
&lt;li&gt;Relative paths for project references&lt;/li&gt;
&lt;li&gt;Automated build dependencies&lt;/li&gt;
&lt;li&gt;Dependency versioning&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="a-common-folder-structure"&gt;A Common Folder Structure&lt;/h2&gt;
&lt;p&gt;Since we're assuming software development inside an organization, we can take advantage of that by sharing some conventions. For all the solutions below I recommend the same folder layout. It's not the only way, but is consistent and allows a mono-style to be broken up more easily later.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use this general structure&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;|_repos
  |_Repo
    |_docs
    |_src
      |_Project1
        |_Project1.csproj
      |_Project2
        |_Project2.csproj
      |_Solution1.sln
    |_build.ps1
    |_pipeline.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A repo with shared project references doesn't need (but could have) a solution file. It's name is prepended with an underscore so that shared projects are at the top of the development folder.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;|_repos
  |__SharedRepo
    |_docs
    |src
      |_Project1
      |_Project1
      |_Project2
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The key to this or other layouts is the predictability of relative paths.&lt;/p&gt;
&lt;h2 id="repositories"&gt;Repositories&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;As long as we stick to the layout, our project references will resolve correctly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here's a example of four Git repositories. Notice how, as long as the convention is followed, the repos don't conflict with each other.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;repos
|__SharedRepo1
  |_.git
  |_docs
  |_src
|__SharedRepo2
  |_.git
  |_docs
  |_src
|_AppRepo1
  |_.git
  |_docs
  |_src
    |_Project1
      -&amp;gt; ProjectReference ../../SharedRepo1/src/Project1/Project1.csproj
      -&amp;gt; PackageReference PackageProject1.2.1.5
  |_build.ps1
  |_pipeline.ps1
|_AppRepo2
  |_.git
  |_docs
  |_src
    |_Project1
      -&amp;gt; ProjectReference ../../SharedRepo1/src/Project1/Project1.csproj
      -&amp;gt; ProjectReference ../../SharedRepo2/src/Project3/Project3.csproj
      -&amp;gt; ProjectReference ../../PackageRepo1/src/PackageProject1/PackageProject1.csproj
  |_build.ps1
  |_pipeline.ps1
|_PackageRepo1
  |_.git
  |_docs
  |_src
    |_PackageProject1
    |_PackageProject2
    |_Packages.sln
  |_build.ps1
  |_pipeline.ps1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;AppRepo2 Project 1 represents what I'd prefer &lt;em&gt;not&lt;/em&gt; to do: reference a NuGet package project. This is discussed later.&lt;/p&gt;
&lt;h2 id="meta-solution-files"&gt;Meta-Solution Files&lt;/h2&gt;
&lt;p&gt;For convenience, developers may want to have their own solution files that combine other solutions. However, most of these should not be stored in source.&lt;/p&gt;
&lt;p&gt;If you put them in the root of the development folder (e.g. &lt;code&gt;repos&lt;/code&gt;), there's no source control issue. But it may make more sense for them to be in a repository's folder, yet still not version controlled. This is accomplished by adding a line in &lt;code&gt;.gitignore&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;# Ignore root-level solution files
*.sln
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;|_repos
  |_Repo
    |_.git
    |_src
      |_Solution1
      |_Solution2
    |_.gitignore
    |_One-Solution.sln
    |_All-Solutions.sln
    |_CommonApps.sln
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If there were a few solution files that were convenient to maintain, then a naming convention could be used instead.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;# Ignore root-level solution files with this naming
*[Ss]olution.sln
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this case, &lt;code&gt;One-Solution.sln&lt;/code&gt; and &lt;code&gt;All-Solutions.sln&lt;/code&gt; would be ignored but &lt;code&gt;CommonApps.sln&lt;/code&gt; would be tracked by Git.&lt;/p&gt;
&lt;h2 id="simultaneous-development-with-packages-if-you-must"&gt;Simultaneous Development With Packages, If You Must&lt;/h2&gt;
&lt;p&gt;If you have to develop a package along with its parent, you need to handle a few things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(Temporarily or permanently) set a project reference to the package, OR&lt;/li&gt;
&lt;li&gt;Publish the package locally for a code-publish-install development loop (&lt;em&gt;don't do this, it's dumb!&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Local build, and continuous integration, must either
&lt;ul&gt;
&lt;li&gt;Remove the project reference, then deploy the package before building the parent, OR&lt;/li&gt;
&lt;li&gt;Maintain the project reference so the parent builds with the new dependency, and simultaneously build/deploy the package&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;.NET Core project files can have both a PackageReference and ProjectReference entry for the same assembly, but it's not good practice and will lead to headaches.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You should &lt;em&gt;not&lt;/em&gt; be bouncing back and forth between project references and package references. Solve the problem that's leading to this anti-pattern&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let's assume you have an application that depends on a packaged project, but you're always updating that dependency in lockstep. The real problem is build and deployment.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The parent project has a project reference to the dependency&lt;/li&gt;
&lt;li&gt;The build script builds the parent app using the project reference, but generates a package for the dependency&lt;/li&gt;
&lt;li&gt;The deployment server deploys the new package independently of the parent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's some PowerShell pseudocode. Your actual implementation will be different!&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;# MyApp build.ps1

# Run the dependency solution's build script, assuming it's independent
# This should prompt for a new version number, see explanation below
cd ..\..\_SharedRepo\src\CompanySecurityHelpers
\build.ps1

# Build and publish the solution locally, which will build the dependency dll
# with the new version number
cd ..\..\MyRepo\src
dotnet build -o Release MyApp.sln
dotnet publish -o Release --no-build MyApp.sln --output package

# if the dependency's script doesn't create the package, package it here
dotnet pack -o Release --no-build ..\..\_SharedRepo\src\CompanySecurityHelpers --output package
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="the-versioning-puzzle-in-general"&gt;The Versioning Puzzle - In General&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Versioning is hard to fully automate. I think it's a mistake to try.&lt;/li&gt;
&lt;li&gt;Fully automating &lt;em&gt;Patch&lt;/em&gt; versioning is probably OK, though.&lt;/li&gt;
&lt;li&gt;Reduce the friction to allowing developers to commit a new version number.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The idea is simple. Most of the time, you only need to increment the version number when you're ready to generate a pull request. At that time, you should be rebasing your changes on top of the latest mainline release, so you &lt;em&gt;should&lt;/em&gt; have access to the latest package version.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The local build script updates the package version&lt;/li&gt;
&lt;li&gt;The automated build/deployment pipeline fails if the package version is lower than what's in the store&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here's pseudo code for asking the developer if the version should be increased. &lt;em&gt;It's the idea, not production code.&lt;/em&gt; This all works best when developers are committing and synchronizing code frequently.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;    $currentVersion = GetCurrentVersion
    Write-Message &amp;quot;Current version is $currentVersion&amp;quot;
    $reply = Read-Host -Prompt 'Do you want to increment the version to publish the package? (y/N)'
    $bumpVersion = $reply -eq 'y'    
    if ($bumpVersion) {
        $level = Read-Host -Prompt 'Which level? (major, minor, patch, [pre])'
        # IncrementVersion takes care of updating the .csproj properties
        $newVersion = IncrementVersion($currentVersion)
        Write-Message &amp;quot;New version will be $newVersion&amp;quot;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A PowerShell script could also read the package store, find the latest package, read its version number, and compare to the package being built. This could run locally to catch a problem before the PR, and would definitely run in the CI/CD server.&lt;/p&gt;
&lt;h2 id="the-versioning-puzzle-nuget-packages-in-particular"&gt;The Versioning Puzzle - NuGet Packages In Particular&lt;/h2&gt;
&lt;p&gt;NuGet packages have a history of dependency resolution challenges. It looks like .NET Core has fixed most issues. To be sure, dependency resolution is hard because a top-level .NET project can only have &lt;em&gt;one&lt;/em&gt; version of a dll when it builds. So, what should happen in the following environment?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MyApp installs and uses Json.Net 9.1.0. It depends on features in that version.&lt;/li&gt;
&lt;li&gt;MyApp installs CoolAutoConfigurator, which itself depends on Json.Net 8.3.7.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;MyApp
|_Json.Net 9.1.0
|_CoolAutoConfigurator
  |_Json.Net 8.3.7

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which version of Json.Net should MyApp include in the &lt;code&gt;bin&lt;/code&gt; folder? The latest? What if there were changes that break CoolAutoConfigurator?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Generally, in Core, the latest version will be used. It's up to the developer to deal with a breaking change by coding around it or contacting the package developer to request they upgrade.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In .NET Framework, including a package with a specific &lt;em&gt;assembly&lt;/em&gt; version would often cause conflicts that were resolved using special files that would, in effect, say &amp;quot;If the assembly version is this, it's OK to use this other assembly version.&amp;quot;&lt;/p&gt;
&lt;p&gt;Package maintainers found the better way to manage Framework packages was to use specific package versions, but change assembly versions only on major releases. So, Json.Net package 9.2.3 and 9.1.0 would both generate a dll with assembly version 9.0.0. The job of the package developer was to ensure no breaking changes in major versions.&lt;/p&gt;
&lt;p&gt;This matters. .NET Framework and Core resolve which NuGet package to install based on package version, but assemlies (exes and dlls) resolve which &lt;em&gt;other&lt;/em&gt; assemblies to use by assembly version, and assemblies with different versions are not equal. If &lt;code&gt;myapp.exe&lt;/code&gt; and &lt;code&gt;mylibrary1.dll&lt;/code&gt; both use &lt;code&gt;mylibrary2.dll&lt;/code&gt;, but expect different assembly versions, the program will fail.&lt;/p&gt;
&lt;p&gt;Core improves on Framework by being more lenient in accepting assembly versions.&lt;/p&gt;
&lt;p&gt;A further complication is which version numbers appear in the NuGet package store versus which are embedded in the compiled assembly (DLL). Here's a handy map for all you people who want to right click &lt;code&gt;myfile.dll&lt;/code&gt; &amp;gt; Properties &amp;gt; Details.&lt;/p&gt;
&lt;p&gt;I'm focusing on .NET Core here.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;.NET Core .csproj property&lt;/th&gt;
&lt;th&gt;.csproj value&lt;/th&gt;
&lt;th&gt;NuGet&lt;/th&gt;
&lt;th&gt;File Property&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Package version&lt;/td&gt;
&lt;td&gt;1.0.2-alpha1&lt;/td&gt;
&lt;td&gt;1.0.2-alpha1&lt;/td&gt;
&lt;td&gt;Product version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assembly version&lt;/td&gt;
&lt;td&gt;1.0.0.0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assembly file version&lt;/td&gt;
&lt;td&gt;1.0.0.123&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;File version&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Weird, isn't it? The assembly version isn't visible in file properties, but it's critical for our applications and for the Global Assembly Cache (GAC).&lt;/p&gt;
&lt;h2 id="wrap-up"&gt;Wrap Up&lt;/h2&gt;
&lt;p&gt;In general, organizations need to avoid making the assumption that all their shared project references &lt;em&gt;should&lt;/em&gt; become packages. Instead, they should extract into packages libraries that can be developed independently, and maintain project references to the other shared code.&lt;/p&gt;
&lt;p&gt;Importantly, they should then &lt;em&gt;reduce the shared project references&lt;/em&gt; by ruthlessly reevaulating and refactoring the code.&lt;/p&gt;
&lt;p&gt;Having a convention for code folder layouts makes it much easier to separate code into independent repositories.&lt;/p&gt;
&lt;p&gt;Versioning is more difficult when it's highly automated. Try keeping this in the developer's hands, and create safeguards to accidentally deploying the wrong thing&lt;a id="fnref:1" href="#fn:1" class="footnote-ref"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, packages do not equal loose coupling, though they can aid in a decoupling effort. Loose coupling has more to do with architecture, modeling, and development practices. An Onion Architecture, Domain-Drive Design, and Test-Driven Devlopment will go a long way to lowering your code's coupling and complexity.&lt;/p&gt;
&lt;div class="footnotes"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;This is one area where I may be more wrong than I want to admit. A better way of thinking might be, &amp;quot;how easy can we make versioning without causing conflict?&amp;quot;&lt;a href="#fnref:1" class="footnote-back-ref"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
      <pubDate>Sat, 21 Aug 2021 17:29:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/developing_with_project_dependencies_-_when_to_package__when_not_to</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/developing_with_project_dependencies_-_when_to_package__when_not_to</guid>
    </item>
    <item>
      <title>Ability, Capability, Capacity are basically the same</title>
      <description>&lt;p&gt;This is a comment on Jonathan Cutrell's Developer Tea podcast episode &lt;a href="https://developertea.com/episodes/b74a0d8a-d7c8-4752-a696-787d03425760"&gt;Skill-Building Is Not One Dimensional&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Important: I love Jonathan's podcast and consider it one of my most important resources!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So with that said, to Jonathan:&lt;/p&gt;
&lt;p&gt;While I appreciate--and agree with!--the intent of this episode, I really have to take exception to the terminology. It reached the point of redefining--or maybe &amp;quot;un-defining&amp;quot;--words. Ability, capability, and capacity all are synonymous enough to not work well for this subject and distinctions you were trying to make.&lt;/p&gt;
&lt;p&gt;Interestingly to me, capability and capacity (&amp;quot;to take in&amp;quot;) are more closely related than ability (&amp;quot;to hold&amp;quot;) and capability. Here's the skinny from the apex of resources, the Oxford English Dictionary.&lt;/p&gt;
&lt;h2 id="able-1382"&gt;Able, 1382&lt;/h2&gt;
&lt;p&gt;&amp;quot;able, adj., adv., and n.&amp;quot;. OED Online. June 2021. Oxford University Press. &lt;a href="https://www-oed-com.research.cincinnatilibrary.org/view/Entry/377?rskey=TAJpgt&amp;amp;result=1&amp;amp;isAdvanced=false"&gt;https://www-oed-com.research.cincinnatilibrary.org/view/Entry/377?rskey=TAJpgt&amp;amp;result=1&amp;amp;isAdvanced=false&lt;/a&gt; (accessed July 18, 2021).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Etymology&lt;/strong&gt;&lt;br /&gt;
&amp;lt; Anglo-Norman abil, abill, Anglo-Norman and Middle French able, habile, hable, Middle French abile, abille, habille (second half of the 12th cent. in Anglo-Norman as haiable ; end of the 12th cent. in Old French in a text from Lorraine as aule , showing vocalization of medial -b- ; French habile ) (of a person) able-bodied, muscular, powerful (second half of the 12th cent. in Anglo-Norman), (of an inanimate object or fact) suitable, fit, appropriate (second half of the 13th cent.), (of a person) competent, expert (end of the 13th cent.), legally capable, entitled, or qualified (end of the 13th cent. or earlier in Anglo-Norman, frequently with reference to ability to inherit; this use is apparently not paralleled in continental French until later (1390 with reference to ability to sue, 1461 with reference to ability to inherit)), (of a ship) seaworthy (c1440 or earlier in Anglo-Norman), (of a person) intelligent, clever (1555) &amp;lt; classical Latin habilis easy to handle, easily dealt with, suitable, fit for a purpose, in post-classical Latin also vigorous (5th cent.), worthy (1448 in a British source) &amp;lt; habēre to hold (see habit n.) + -ilis -il suffix. In senses A. 3a and A. 4 (which are apparently not paralleled in French) after classical Latin habilis. Compare Old Occitan abil (14th cent.), Catalan hàbil (1490 as †àbil ), Spanish hábil (late 14th cent.; also †abil ), Portuguese hábil (15th cent. as †abile , †aville ), Italian abile (end of the 13th cent. or earlier; also †habile ). Compare later habile adj. 4 and see discussion at that entry, and also unable adj. and later inhabile adj.&lt;/p&gt;
&lt;p&gt;Abil, Habil, &amp;quot;to hold&amp;quot;, suitable, fit&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt; &lt;/p&gt;
&lt;ol type="a"&gt;
&lt;li&gt;&lt;p&gt;In predicative use, with for (in early use also with to). Capable of, having sufficient strength or power for; ready for, fit to cope with. Now chiefly Irish English.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In predicative use, with infinitive or without complement: having the means, capacity, or qualifications to do something; having sufficient power; in such a position that a particular action is possible; worthy, qualified, competent, capable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since very late Middle English or early modern English, to be able (to) has been used (with all tenses of to be) as an alternative to or replacement for can and could (see can v.1 II.) in contexts relating to ability and possibility, and is now chiefly so used. In standard English since that period can has lacked an infinitive, present participle, past participle, and gerund; to be able (to) is used to replace this verb in compounds with other auxiliaries (especially supplying a future tense and perfect tenses) and in non-finite constructions. Occurrence of a passive verb in the to-infinitive is relatively unusual, being generally limited to contexts in which to be able conveys potentiality, permission, or likelihood rather than active power. See also unable adj. 1a.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now Scottish, Irish English (northern), and Newfoundland.&lt;/p&gt;
&lt;ol type="a"&gt;
&lt;li&gt;&lt;p&gt;Of a person, the body, etc.: having general physical strength; vigorous, powerful, muscular. Cf. able-bodied adj.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Of a thing (esp. a boat): strong, substantial, well built.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Of a person, an achievement, etc.: having or showing general intelligence, skill, or aptitude; talented, clever. Cf. ability n. 6, habile adj. 4.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="capable-1571"&gt;Capable, 1571&lt;/h2&gt;
&lt;p&gt;&amp;quot;capable, adj. and n.&amp;quot;. OED Online. June 2021. Oxford University Press. &lt;a href="https://www-oed-com.research.cincinnatilibrary.org/view/Entry/27354?redirectedFrom=capable"&gt;https://www-oed-com.research.cincinnatilibrary.org/view/Entry/27354?redirectedFrom=capable&lt;/a&gt; (accessed July 18, 2021).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Etymology&lt;/strong&gt;&lt;br /&gt;
&amp;lt; French capable (= Provençal capable), &amp;lt; late Latin capābil-em (in early theological use: see Du Cange), irregularly &amp;lt; Latin capĕre to take. The regular formation would have been capibilis; perhaps capābilis was influenced by capax: Beda Lib. de Orthogr. has ‘capax, qui facile capit; capabilis, qui facile capitur’ (Du Cange); so Augustine, but Cassiodorus c575 has it in the active sense = capax, as in the modern languages.&lt;/p&gt;
&lt;p&gt;To take&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt; &lt;/p&gt;
&lt;ol type="a"&gt;
&lt;li&gt;Able to take in, receive, contain, or hold; having room or capacity for. Const. of, for, or infinitive. Obsolete.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt; &lt;/p&gt;
&lt;ol type="a"&gt;
&lt;li&gt;absol. Able to hold much; roomy, capacious.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Able or fit to receive and be affected by; open to, susceptible:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Able to be affected by; of a nature, or in a condition, to allow or admit of; admitting; susceptible. Const. of, also absol.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt; &lt;/p&gt;
&lt;ol type="a"&gt;
&lt;li&gt;Having the needful capacity, power, or fitness for (some specified purpose or activity). Const. of; formerly also infinitive.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="capacity-1481"&gt;Capacity, 1481&lt;/h2&gt;
&lt;p&gt;&amp;quot;capacity, n.&amp;quot;. OED Online. June 2021. Oxford University Press. &lt;a href="https://www-oed-com.research.cincinnatilibrary.org/view/Entry/27368?redirectedFrom=capacity"&gt;https://www-oed-com.research.cincinnatilibrary.org/view/Entry/27368?redirectedFrom=capacity&lt;/a&gt; (accessed July 18, 2021).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Etymology&lt;/strong&gt;&lt;br /&gt;
15th cent. capacyte , &amp;lt; French capacité , &amp;lt; Latin capācitāt-em , noun of state &amp;lt; capāx , capāci- able to take in:&lt;/p&gt;
&lt;p&gt;Able to take in&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt; &lt;/p&gt;
&lt;ol type="a"&gt;
&lt;li&gt;&lt;p&gt;Ability to receive or contain; holding power. Obsolete (in general sense).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;capacity for heat, capacity for moisture, etc.: the power of absorbing heat, etc. capacity of a conductor: see quot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The power of an apparatus to store static electricity; also = capacitance n.   Also attributive, denoting an apparatus which gives additional capacity, as capacity cage, capacity earth.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The largest audience that a place of entertainment can hold; a situation in which a theatre, cinema, etc., is full; spec. in to capacity: with all available room occupied; hence in general use, full; to the limit.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In industry: the ability to produce; equivalent to ‘full capacity’.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mental or intellectual receiving power; ability to grasp or take in impressions, ideas, knowledge.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Active power or force of mind; mental ability, talent.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gen. The power, ability, or faculty for anything in particular. Constr. of, for, or infinitive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The quality or condition of admitting or being open to action or treatment; capability, possibility.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
      <pubDate>Sat, 7 Aug 2021 15:38:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/ability_capability_capacity_are_basically_the_same</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/ability_capability_capacity_are_basically_the_same</guid>
    </item>
    <item>
      <title>Solutions to Error "Unable to connect to Web Server IIS Express"</title>
      <description>&lt;h2 id="issue"&gt;Issue&lt;/h2&gt;
&lt;p&gt;IIS Express will occasionally not be able to start on a particular port with this error.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unable to connect to Web Server IIS Express&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In some cases, it's because another app is using that port. But often the reason is that Hyper-V has reserved one or more of the ports. To see which ports are currently excluded/reserved, run this command.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: all commands are in PowerShell 7 and should be run as Administrator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class="language-powershell"&gt;netsh int ipv4 show excludedportrange protocol=tcp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result may look something like this.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;Start Port    End Port
----------    --------
     50000       50059     *
     54675       54774
     54840       54939
     54940       55039
     55040       55139
     55140       55239
     55329       55428
     55429       55528

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As far as I can tell, Hyper-V doesn't have a known port range it will attempt to use and work around. So, the solution is to exclude the individual ports your projects require.&lt;/p&gt;
&lt;p&gt;You can check which ports the apps use by looking at the &lt;code&gt;launchSettings.json&lt;/code&gt; files (assuming .NET Core). Be sure to include both the HTTP and SSL ports. Let's say, across all your projects, IIS Express will need to run on ports 44431,44435,54700,54701.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Disable Hyper-V
&lt;pre&gt;&lt;code class="language-powershell"&gt;dism.exe /Online /Disable-Feature:Microsoft-Hyper-V
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Restart when prompted&lt;/li&gt;
&lt;li&gt;Run this script, substituting your ports
&lt;pre&gt;&lt;code class="language-powershell"&gt;$ports = 44431,44435,54700,54701

foreach ($port in $ports) { 
    netsh int ipv4 add excludedportrange protocol=tcp startport=$port numberofports=1 
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Reenable Hyper-V
&lt;pre&gt;&lt;code class="language-powershell"&gt;dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Restart when prompted&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="troubleshooting"&gt;Troubleshooting&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Error: The process cannot access the file because it is being used by another process.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you get this error when running &lt;code&gt;netsh&lt;/code&gt; to exclude the port, the port is already excluded. It's a confusing error message.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows could not start the Hyper-V Virtual Machine Management service on Local Computer.
Error 0x8007000e: Not enough memory resources are available to complete this operation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you attempt to start the Hyper-V Virtual Machine Management service and get this error, it can be caused if the Hyper-V Host Compute Service is Disabled. Open Services and set that service as Manual.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dandini.wordpress.com/2019/07/15/administered-port-exclusions-blocking-high-ports/"&gt;Administered Port Exclusions blocking high ports – The 'almost not worth having' blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/for-win/issues/3171"&gt;Unable to bind ports: Docker-for-Windows &amp;amp; Hyper-V excluding but not using important port ranges · Issue #3171 · docker/for-win&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.vembu.com/blog/hyper-v-wont-start/"&gt;What to Do When Hyper-V Won’t Start - vembu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/48478869/cannot-bind-to-some-ports-due-to-permission-denied/54727281#54727281"&gt;windows - Cannot bind to some ports due to permission denied - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/archive/blogs/whereismysolution/how-to-use-reserved-port-in-nettcpbinding-and-basichttpbinding-in-a-wcf-application"&gt;How to use reserved port in netTcpBinding and basicHttpBinding in a WCF Application | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/strayge/481a77d31a94e133a76662877b1a90ca"&gt;windows 10, port reserved for HyperV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-US/troubleshoot/windows-server/networking/default-dynamic-port-range-tcpip-chang"&gt;The default dynamic port range for TCP/IP has changed in Windows Vista and in Windows Server 2008 - Windows Server | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://superuser.com/questions/1192492/how-to-remove-a-hyper-v-virtual-ethernet-switch"&gt;windows 10 - How to remove a Hyper-V virtual Ethernet switch - Super User&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://social.technet.microsoft.com/Forums/en-US/900298bd-4a86-4c9d-9950-11f0c050fa2f/hyperv-manager-unable-to-connect-to-server-quotlocal-computerquot"&gt;Hyper-V Manager unable to connect to server &amp;quot;Local computer&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WSL/issues/5240"&gt;Error: 0x8007000e Not enough memory resources are available to complete this operation. · Issue #5240 · microsoft/WSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/reference/hyper-v-requirements"&gt;Windows 10 Hyper-V System Requirements | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://serverfault.com/questions/1045527/how-do-i-find-out-why-certain-ports-are-excluded-and-delete-the-exclusion"&gt;windows - How do I find out why certain ports are excluded and delete the exclusion? - Server Fault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/58216537/what-is-administered-port-exclusions-in-windows-10"&gt;hyper v - What is Administered port exclusions in windows 10? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Wed, 4 Aug 2021 10:00:00 -0600</pubDate>
      <link>https://www.softwaremeadows.com/posts/solutions_to_error_unable_to_connect_to_web_server_iis_express</link>
      <guid isPermaLink="true">https://www.softwaremeadows.com/posts/solutions_to_error_unable_to_connect_to_web_server_iis_express</guid>
    </item>
  </channel>
</rss>